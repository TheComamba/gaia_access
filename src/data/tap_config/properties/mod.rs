// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the properties table.

use crate::traits::{Column, Table};

/// The properties table. (No further description available)
#[allow(non_camel_case_types)]
pub struct properties;

impl Table for properties {
    fn string(&self) -> String {
        "properties".to_string()
    }
}

/// The columns in the properties table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// The "key" column. (No further description available)
    #[strum(serialize = "\"key\"")]
    key,
    /// The "value" column. (No further description available)
    #[strum(serialize = "\"value\"")]
    value,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the properties table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::key.to_string());
    col_strings.push(Col::value.to_string());
    map.insert(properties.string(), col_strings);
}
