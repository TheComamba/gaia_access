// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the lens_catalogue_name table.

use crate::traits::{Column, Table};

/// This table provides the list of input catalogues that have been used to select any given source that was analysed by the Gravitational Lens module and published in the lens candidate table.
#[allow(non_camel_case_types)]
pub struct lens_catalogue_name;

impl Table for lens_catalogue_name {
    fn string(&self) -> String {
        "lens_catalogue_name".to_string()
    }
}

/// The columns in the lens_catalogue_name table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// Solution Identifier
    solution_id,
    /// Unique source identifier (unique within a particular Data Release)
    source_id,
    /// The unique identifier for the catalogue(s) used to select the sources in the gravitational lenses analysis
    catalogue_id,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the lens_catalogue_name table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::solution_id.to_string());
    col_strings.push(Col::source_id.to_string());
    col_strings.push(Col::catalogue_id.to_string());
    map.insert(lens_catalogue_name.string(), col_strings);
}
