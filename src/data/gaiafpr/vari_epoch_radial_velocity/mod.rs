// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the vari_epoch_radial_velocity table.

use crate::traits::{Column, Table};

/// This table contains the epoch radial velocity data points for a sub-set of variable stars. Each entry is a radial velocity in the solar barycentric reference frame for a given object and observation time.
#[allow(non_camel_case_types)]
pub struct vari_epoch_radial_velocity;

impl Table for vari_epoch_radial_velocity {
    fn string(&self) -> String {
        "vari_epoch_radial_velocity".to_string()
    }
}

/// The columns in the vari_epoch_radial_velocity table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// Solution Identifier
    solution_id,
    /// Unique source identifier (unique within a particular Data Release)
    source_id,
    /// Transit unique identifier
    transit_id,
    /// Observing time of the transit
    rv_obs_time,
    /// Barycentric radial velocity
    radial_velocity,
    /// Barycentric radial velocity error
    radial_velocity_error,
    /// Rejected by DPAC variability processing (or variability analysis)
    rejected_by_variability,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the vari_epoch_radial_velocity table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::solution_id.to_string());
    col_strings.push(Col::source_id.to_string());
    col_strings.push(Col::transit_id.to_string());
    col_strings.push(Col::rv_obs_time.to_string());
    col_strings.push(Col::radial_velocity.to_string());
    col_strings.push(Col::radial_velocity_error.to_string());
    col_strings.push(Col::rejected_by_variability.to_string());
    map.insert(vari_epoch_radial_velocity.string(), col_strings);
}
