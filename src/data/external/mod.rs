// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known tables in the external schema.

use crate::traits::Schema;

/// TAP Schema for external catalogues
#[allow(non_camel_case_types)]
pub struct external;

impl Schema for external {
    fn string(&self) -> String {
        "external".to_string()
    }
}

#[cfg(any(feature = "external_apassdr9", test))]
pub mod apassdr9;
#[cfg(any(feature = "external_catwise2020", test))]
pub mod catwise2020;
#[cfg(any(feature = "external_gaia_eso_survey", test))]
pub mod gaia_eso_survey;
#[cfg(any(feature = "external_gaiadr2_astrophysical_parameters", test))]
pub mod gaiadr2_astrophysical_parameters;
#[cfg(any(feature = "external_gaiadr2_geometric_distance", test))]
pub mod gaiadr2_geometric_distance;
#[cfg(any(feature = "external_gaiaedr3_distance", test))]
pub mod gaiaedr3_distance;
#[cfg(any(feature = "external_gaiaedr3_gcns_main_1", test))]
pub mod gaiaedr3_gcns_main_1;
#[cfg(any(feature = "external_gaiaedr3_gcns_rejected_1", test))]
pub mod gaiaedr3_gcns_rejected_1;
#[cfg(any(feature = "external_gaiaedr3_spurious", test))]
pub mod gaiaedr3_spurious;
#[cfg(any(feature = "external_galex_ais", test))]
pub mod galex_ais;
#[cfg(any(feature = "external_ravedr5_com", test))]
pub mod ravedr5_com;
#[cfg(any(feature = "external_ravedr5_dr5", test))]
pub mod ravedr5_dr5;
#[cfg(any(feature = "external_ravedr5_gra", test))]
pub mod ravedr5_gra;
#[cfg(any(feature = "external_ravedr5_on", test))]
pub mod ravedr5_on;
#[cfg(any(feature = "external_ravedr6", test))]
pub mod ravedr6;
#[cfg(any(feature = "external_sdssdr13_photoprimary", test))]
pub mod sdssdr13_photoprimary;
#[cfg(any(feature = "external_skymapperdr1_master", test))]
pub mod skymapperdr1_master;
#[cfg(any(feature = "external_skymapperdr2_master", test))]
pub mod skymapperdr2_master;
#[cfg(any(feature = "external_tmass_xsc", test))]
pub mod tmass_xsc;
#[cfg(any(feature = "external_xgboost_table1", test))]
pub mod xgboost_table1;
#[cfg(any(feature = "external_xgboost_table2", test))]
pub mod xgboost_table2;

#[cfg(test)]
/// Collects all the known tables in the external schema.
pub(crate) fn collect_known(
    map: &mut std::collections::HashMap<String, std::collections::HashMap<String, Vec<String>>>,
) {
    // Some tables do not have any columns. Disabling compiler warnings for these cases
    #[allow(unused_mut)]
    let mut tables = std::collections::HashMap::new();
    apassdr9::collect_known(&mut tables);
    catwise2020::collect_known(&mut tables);
    gaiadr2_astrophysical_parameters::collect_known(&mut tables);
    gaiadr2_geometric_distance::collect_known(&mut tables);
    gaiaedr3_distance::collect_known(&mut tables);
    gaiaedr3_gcns_main_1::collect_known(&mut tables);
    gaiaedr3_gcns_rejected_1::collect_known(&mut tables);
    gaiaedr3_spurious::collect_known(&mut tables);
    gaia_eso_survey::collect_known(&mut tables);
    galex_ais::collect_known(&mut tables);
    ravedr5_com::collect_known(&mut tables);
    ravedr5_dr5::collect_known(&mut tables);
    ravedr5_gra::collect_known(&mut tables);
    ravedr5_on::collect_known(&mut tables);
    ravedr6::collect_known(&mut tables);
    sdssdr13_photoprimary::collect_known(&mut tables);
    skymapperdr1_master::collect_known(&mut tables);
    skymapperdr2_master::collect_known(&mut tables);
    tmass_xsc::collect_known(&mut tables);
    xgboost_table1::collect_known(&mut tables);
    xgboost_table2::collect_known(&mut tables);
    map.insert(external.string(), tables);
}
