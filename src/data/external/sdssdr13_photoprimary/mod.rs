// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the sdssdr13_photoprimary table.

use crate::traits::{Column, Table};

/// DR13 photometric catalog quantities for SDSS imaging. Only primary sources are included. It is a copy of CasJobs PhotoPrimary view of table PhotoObjAll. Reference: Albareti 2017 ApJS 233, 25A. CasJobs available through SciServer http://www.sciserver.org/. This table contains the associated photometric parameters measured by PHOTO, and astrometrically and photometrically calibrated for all photo objects that are primary (the best version of the object). Star: Primary objects that are classified as stars. Galaxy: Primary objects that are classified as galaxies. Sky:Primary objects which are sky samples. Unknown: Primary objects which are none of the above. Each physical object on the sky has only one primary object associated with it. Upon subsequent observations secondary objects are generated. Since the survey stripes overlap, there will be secondary objects for over 10% of all primary objects, and in the southern stripes there will be a multitude of secondary objects for each primary (i.e. reobservations).
#[allow(non_camel_case_types)]
pub struct sdssdr13_photoprimary;

impl Table for sdssdr13_photoprimary {
    fn string(&self) -> String {
        "sdssdr13_photoprimary".to_string()
    }
}

/// The columns in the sdssdr13_photoprimary table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// Unique SDSS identifier composed from [skyVersion,rerun,run,camcol,field,obj].
    objid,
    /// Layer of catalog (currently only one layer, 0; 0-15 available)
    skyversion,
    /// Run number
    run,
    /// Rerun number
    rerun,
    /// Camera column
    camcol,
    /// Field number
    field,
    /// The object id within a field. Usually changes between reruns of the same field
    obj,
    /// 1: primary, 2: secondary, 3: other
    mode,
    /// Number
    nchild,
    /// Type classification of the object (star, galaxy, cosmic ray, etc.)
    #[strum(serialize = "type")]
    type_col,
    /// Clean photometry flag (1=clean, 0=unclean).
    clean,
    /// Probability that the object is a star. Currently 0 if type == 3 (galaxy), 1 if type == 6 (star).
    probpsf,
    /// Flag to indicate whether object is inside a mask and why
    insidemask,
    /// Photo Object Attribute Flags
    flags,
    /// Row center position (r-band coordinates)
    rowc,
    /// Row center position error (r-band coordinates)
    rowcerr,
    /// Column center position (r-band coordinates)
    colc,
    /// Column center position error (r-band coordinates)
    colcerr,
    /// Row-component of objects velocity
    rowv,
    /// Row-component of objects velocity error
    rowverr,
    /// Column-component of objects velocity
    colv,
    /// Column-component of objects velocity error
    colverr,
    /// Row center, u-band
    rowc_u,
    /// Row center, g-band
    rowc_g,
    /// Row center, r-band
    rowc_r,
    /// Row center, i-band
    rowc_i,
    /// Row center, z-band
    rowc_z,
    /// ERROR Row center error, u-band
    rowcerr_u,
    /// ERROR Row center error, g-band
    rowcerr_g,
    /// ERROR Row center error, r-band
    rowcerr_r,
    /// ERROR Row center error, i-band
    rowcerr_i,
    /// ERROR Row center error, z-band
    rowcerr_z,
    /// Column center, u-band
    colc_u,
    /// Column center, g-band
    colc_g,
    /// Column center, r-band
    colc_r,
    /// Column center, i-band
    colc_i,
    /// Column center, z-band
    colc_z,
    /// Column center error, u-band
    colcerr_u,
    /// Column center error, g-band
    colcerr_g,
    /// Column center error, r-band
    colcerr_r,
    /// Column center error, i-band
    colcerr_i,
    /// Column center error, z-band
    colcerr_z,
    /// Sky flux at the center of object (allowing for siblings if blended).
    sky_u,
    /// Sky flux at the center of object (allowing for siblings if blended).
    sky_g,
    /// Sky flux at the center of object (allowing for siblings if blended).
    sky_r,
    /// Sky flux at the center of object (allowing for siblings if blended).
    sky_i,
    /// Sky flux at the center of object (allowing for siblings if blended).
    sky_z,
    /// Sky flux inverse variance
    skyivar_u,
    /// Sky flux inverse variance
    skyivar_g,
    /// Sky flux inverse variance
    skyivar_r,
    /// Sky flux inverse variance
    skyivar_i,
    /// Sky flux inverse variance
    skyivar_z,
    /// PSF magnitude
    psfmag_u,
    /// PSF magnitude
    psfmag_g,
    /// PSF magnitude
    psfmag_r,
    /// PSF magnitude
    psfmag_i,
    /// PSF magnitude
    psfmag_z,
    /// PSF magnitude error
    psfmagerr_u,
    /// PSF magnitude error
    psfmagerr_g,
    /// PSF magnitude error
    psfmagerr_r,
    /// PSF magnitude error
    psfmagerr_i,
    /// PSF magnitude error
    psfmagerr_z,
    /// Magnitude in 3 arcsec diameter fiber radius
    fibermag_u,
    /// Magnitude in 3 arcsec diameter fiber radius
    fibermag_g,
    /// Magnitude in 3 arcsec diameter fiber radius
    fibermag_r,
    /// Magnitude in 3 arcsec diameter fiber radius
    fibermag_i,
    /// Magnitude in 3 arcsec diameter fiber radius
    fibermag_z,
    /// Error in magnitude in 3 arcsec diameter fiber radius
    fibermagerr_u,
    /// Error in magnitude in 3 arcsec diameter fiber radius
    fibermagerr_g,
    /// Error in magnitude in 3 arcsec diameter fiber radius
    fibermagerr_r,
    /// Error in magnitude in 3 arcsec diameter fiber radius
    fibermagerr_i,
    /// Error in magnitude in 3 arcsec diameter fiber radius
    fibermagerr_z,
    /// Magnitude in 2 arcsec diameter fiber radius
    fiber2mag_u,
    /// Magnitude in 2 arcsec diameter fiber radius
    fiber2mag_g,
    /// Magnitude in 2 arcsec diameter fiber radius
    fiber2mag_r,
    /// Magnitude in 2 arcsec diameter fiber radius
    fiber2mag_i,
    /// Magnitude in 2 arcsec diameter fiber radius
    fiber2mag_z,
    /// Error in magnitude in 2 arcsec diameter fiber radius
    fiber2magerr_u,
    /// Error in magnitude in 2 arcsec diameter fiber radius
    fiber2magerr_g,
    /// Error in magnitude in 2 arcsec diameter fiber radius
    fiber2magerr_r,
    /// Error in magnitude in 2 arcsec diameter fiber radius
    fiber2magerr_i,
    /// Error in magnitude in 2 arcsec diameter fiber radius
    fiber2magerr_z,
    /// Petrosian magnitude
    petromag_u,
    /// Petrosian magnitude
    petromag_g,
    /// Petrosian magnitude
    petromag_r,
    /// Petrosian magnitude
    petromag_i,
    /// Petrosian magnitude
    petromag_z,
    /// Petrosian magnitude error
    petromagerr_u,
    /// Petrosian magnitude error
    petromagerr_g,
    /// Petrosian magnitude error
    petromagerr_r,
    /// Petrosian magnitude error
    petromagerr_i,
    /// Petrosian magnitude error
    petromagerr_z,
    /// PSF flux
    psfflux_u,
    /// PSF flux
    psfflux_g,
    /// PSF flux
    psfflux_r,
    /// PSF flux
    psfflux_i,
    /// PSF flux
    psfflux_z,
    /// PSF flux inverse variance
    psffluxivar_u,
    /// PSF flux inverse variance
    psffluxivar_g,
    /// PSF flux inverse variance
    psffluxivar_r,
    /// PSF flux inverse variance
    psffluxivar_i,
    /// PSF flux inverse variance
    psffluxivar_z,
    /// Flux in 3 arcsec diameter fiber radius
    fiberflux_u,
    /// Flux in 3 arcsec diameter fiber radius
    fiberflux_g,
    /// Flux in 3 arcsec diameter fiber radius
    fiberflux_r,
    /// Flux in 3 arcsec diameter fiber radius
    fiberflux_i,
    /// Flux in 3 arcsec diameter fiber radius
    fiberflux_z,
    /// Inverse variance in flux in 3 arcsec diameter fiber radius
    fiberfluxivar_u,
    /// Inverse variance in flux in 3 arcsec diameter fiber radius
    fiberfluxivar_g,
    /// Inverse variance in flux in 3 arcsec diameter fiber radius
    fiberfluxivar_r,
    /// Inverse variance in flux in 3 arcsec diameter fiber radius
    fiberfluxivar_i,
    /// Inverse variance in flux in 3 arcsec diameter fiber radius
    fiberfluxivar_z,
    /// Flux in 2 arcsec diameter fiber radius
    fiber2flux_u,
    /// Flux in 2 arcsec diameter fiber radius
    fiber2flux_g,
    /// Flux in 2 arcsec diameter fiber radius
    fiber2flux_r,
    /// Flux in 2 arcsec diameter fiber radius
    fiber2flux_i,
    /// Flux in 2 arcsec diameter fiber radius
    fiber2flux_z,
    /// Inverse variance in flux in 2 arcsec diameter fiber radius
    fiber2fluxivar_u,
    /// Inverse variance in flux in 2 arcsec diameter fiber radius
    fiber2fluxivar_g,
    /// Inverse variance in flux in 2 arcsec diameter fiber radius
    fiber2fluxivar_r,
    /// Inverse variance in flux in 2 arcsec diameter fiber radius
    fiber2fluxivar_i,
    /// Inverse variance in flux in 2 arcsec diameter fiber radius
    fiber2fluxivar_z,
    /// Petrosian flux
    petroflux_u,
    /// Petrosian flux
    petroflux_g,
    /// Petrosian flux
    petroflux_r,
    /// Petrosian flux
    petroflux_i,
    /// Petrosian flux
    petroflux_z,
    /// Petrosian flux inverse variance
    petrofluxivar_u,
    /// Petrosian flux inverse variance
    petrofluxivar_g,
    /// Petrosian flux inverse variance
    petrofluxivar_r,
    /// Petrosian flux inverse variance
    petrofluxivar_i,
    /// Petrosian flux inverse variance
    petrofluxivar_z,
    /// Petrosian radius
    petrorad_u,
    /// Petrosian radius
    petrorad_g,
    /// Petrosian radius
    petrorad_r,
    /// Petrosian radius
    petrorad_i,
    /// Petrosian radius
    petrorad_z,
    /// Petrosian radius error
    petroraderr_u,
    /// Petrosian radius error
    petroraderr_g,
    /// Petrosian radius error
    petroraderr_r,
    /// Petrosian radius error
    petroraderr_i,
    /// Petrosian radius error
    petroraderr_z,
    /// Radius containing 50% of Petrosian flux
    petror50_u,
    /// Radius containing 50% of Petrosian flux
    petror50_g,
    /// Radius containing 50% of Petrosian flux
    petror50_r,
    /// Radius containing 50% of Petrosian flux
    petror50_i,
    /// Radius containing 50% of Petrosian flux
    petror50_z,
    /// Error in radius with 50% of Petrosian flux error
    petror50err_u,
    /// Error in radius with 50% of Petrosian flux error
    petror50err_g,
    /// Error in radius with 50% of Petrosian flux error
    petror50err_r,
    /// Error in radius with 50% of Petrosian flux error
    petror50err_i,
    /// Error in radius with 50% of Petrosian flux error
    petror50err_z,
    /// Radius containing 90% of Petrosian flux
    petror90_u,
    /// Radius containing 90% of Petrosian flux
    petror90_g,
    /// Radius containing 90% of Petrosian flux
    petror90_r,
    /// Radius containing 90% of Petrosian flux
    petror90_i,
    /// Radius containing 90% of Petrosian flux
    petror90_z,
    /// Error in radius with 90% of Petrosian flux error
    petror90err_u,
    /// Error in radius with 90% of Petrosian flux error
    petror90err_g,
    /// Error in radius with 90% of Petrosian flux error
    petror90err_r,
    /// Error in radius with 90% of Petrosian flux error
    petror90err_i,
    /// Error in radius with 90% of Petrosian flux error
    petror90err_z,
    /// Stokes Q parameter
    q_u,
    /// Stokes Q parameter
    q_g,
    /// Stokes Q parameter
    q_r,
    /// Stokes Q parameter
    q_i,
    /// Stokes Q parameter
    q_z,
    /// Stokes Q parameter error
    qerr_u,
    /// Stokes Q parameter error
    qerr_g,
    /// Stokes Q parameter error
    qerr_r,
    /// Stokes Q parameter error
    qerr_i,
    /// Stokes Q parameter error
    qerr_z,
    /// Stokes U parameter
    u_u,
    /// Stokes U parameter
    u_g,
    /// Stokes U parameter
    u_r,
    /// Stokes U parameter
    u_i,
    /// Stokes U parameter
    u_z,
    /// Stokes U parameter error
    uerr_u,
    /// Stokes U parameter error
    uerr_g,
    /// Stokes U parameter error
    uerr_r,
    /// Stokes U parameter error
    uerr_i,
    /// Stokes U parameter error
    uerr_z,
    /// Adaptive E1 shape measure (pixel coordinates)
    me1_u,
    /// Adaptive E1 shape measure (pixel coordinates)
    me1_g,
    /// Adaptive E1 shape measure (pixel coordinates)
    me1_r,
    /// Adaptive E1 shape measure (pixel coordinates)
    me1_i,
    /// Adaptive E1 shape measure (pixel coordinates)
    me1_z,
    /// Adaptive E2 shape measure (pixel coordinates)
    me2_u,
    /// Adaptive E2 shape measure (pixel coordinates)
    me2_g,
    /// Adaptive E2 shape measure (pixel coordinates)
    me2_r,
    /// Adaptive E2 shape measure (pixel coordinates)
    me2_i,
    /// Adaptive E2 shape measure (pixel coordinates)
    me2_z,
    /// Covariance in E1/E1 shape measure (pixel coordinates)
    me1e1err_u,
    /// Covariance in E1/E1 shape measure (pixel coordinates)
    me1e1err_g,
    /// Covariance in E1/E1 shape measure (pixel coordinates)
    me1e1err_r,
    /// Covariance in E1/E1 shape measure (pixel coordinates)
    me1e1err_i,
    /// Covariance in E1/E1 shape measure (pixel coordinates)
    me1e1err_z,
    /// Covariance in E1/E2 shape measure (pixel coordinates)
    me1e2err_u,
    /// Covariance in E1/E2 shape measure (pixel coordinates)
    me1e2err_g,
    /// Covariance in E1/E2 shape measure (pixel coordinates)
    me1e2err_r,
    /// Covariance in E1/E2 shape measure (pixel coordinates)
    me1e2err_i,
    /// Covariance in E1/E2 shape measure (pixel coordinates)
    me1e2err_z,
    /// Covariance in E2/E2 shape measure (pixel coordinates)
    me2e2err_u,
    /// Covariance in E2/E2 shape measure (pixel coordinates)
    me2e2err_g,
    /// Covariance in E2/E2 shape measure (pixel coordinates)
    me2e2err_r,
    /// Covariance in E2/E2 shape measure (pixel coordinates)
    me2e2err_i,
    /// Covariance in E2/E2 shape measure (pixel coordinates)
    me2e2err_z,
    /// Adaptive ( + ) (pixel coordinates)
    mrrcc_u,
    /// Adaptive ( + ) (pixel coordinates)
    mrrcc_g,
    /// Adaptive ( + ) (pixel coordinates)
    mrrcc_r,
    /// Adaptive ( + ) (pixel coordinates)
    mrrcc_i,
    /// Adaptive ( + ) (pixel coordinates)
    mrrcc_z,
    /// Error in adaptive ( + ) (pixel coordinates)
    mrrccerr_u,
    /// Error in adaptive ( + ) (pixel coordinates)
    mrrccerr_g,
    /// Error in adaptive ( + ) (pixel coordinates)
    mrrccerr_r,
    /// Error in adaptive ( + ) (pixel coordinates)
    mrrccerr_i,
    /// Error in adaptive ( + ) (pixel coordinates)
    mrrccerr_z,
    /// Adaptive fourth moment of object (pixel coordinates)
    mcr4_u,
    /// Adaptive fourth moment of object (pixel coordinates)
    mcr4_g,
    /// Adaptive fourth moment of object (pixel coordinates)
    mcr4_r,
    /// Adaptive fourth moment of object (pixel coordinates)
    mcr4_i,
    /// Adaptive fourth moment of object (pixel coordinates)
    mcr4_z,
    /// Adaptive E1 for PSF (pixel coordinates)
    me1psf_u,
    /// Adaptive E1 for PSF (pixel coordinates)
    me1psf_g,
    /// Adaptive E1 for PSF (pixel coordinates)
    me1psf_r,
    /// Adaptive E1 for PSF (pixel coordinates)
    me1psf_i,
    /// Adaptive E1 for PSF (pixel coordinates)
    me1psf_z,
    /// Adaptive E2 for PSF (pixel coordinates)
    me2psf_u,
    /// Adaptive E2 for PSF (pixel coordinates)
    me2psf_g,
    /// Adaptive E2 for PSF (pixel coordinates)
    me2psf_r,
    /// Adaptive E2 for PSF (pixel coordinates)
    me2psf_i,
    /// Adaptive E2 for PSF (pixel coordinates)
    me2psf_z,
    /// Adaptive ( + ) for PSF (pixel coordinates)
    mrrccpsf_u,
    /// Adaptive ( + ) for PSF (pixel coordinates)
    mrrccpsf_g,
    /// Adaptive ( + ) for PSF (pixel coordinates)
    mrrccpsf_r,
    /// Adaptive ( + ) for PSF (pixel coordinates)
    mrrccpsf_i,
    /// Adaptive ( + ) for PSF (pixel coordinates)
    mrrccpsf_z,
    /// Adaptive fourth moment for PSF (pixel coordinates)
    mcr4psf_u,
    /// Adaptive fourth moment for PSF (pixel coordinates)
    mcr4psf_g,
    /// Adaptive fourth moment for PSF (pixel coordinates)
    mcr4psf_r,
    /// Adaptive fourth moment for PSF (pixel coordinates)
    mcr4psf_i,
    /// Adaptive fourth moment for PSF (pixel coordinates)
    mcr4psf_z,
    /// de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    devrad_u,
    /// de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    devrad_g,
    /// de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    devrad_r,
    /// de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    devrad_i,
    /// de Vaucouleurs fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    devrad_z,
    /// Error in de Vaucouleurs fit scale radius error
    devraderr_u,
    /// Error in de Vaucouleurs fit scale radius error
    devraderr_g,
    /// Error in de Vaucouleurs fit scale radius error
    devraderr_r,
    /// Error in de Vaucouleurs fit scale radius error
    devraderr_i,
    /// Error in de Vaucouleurs fit scale radius error
    devraderr_z,
    /// de Vaucouleurs fit b/a
    devab_u,
    /// de Vaucouleurs fit b/a
    devab_g,
    /// de Vaucouleurs fit b/a
    devab_r,
    /// de Vaucouleurs fit b/a
    devab_i,
    /// de Vaucouleurs fit b/a
    devab_z,
    /// de Vaucouleurs fit b/a error
    devaberr_u,
    /// de Vaucouleurs fit b/a error
    devaberr_g,
    /// de Vaucouleurs fit b/a error
    devaberr_r,
    /// de Vaucouleurs fit b/a error
    devaberr_i,
    /// de Vaucouleurs fit b/a error
    devaberr_z,
    /// de Vaucouleurs fit position angle (+N thru E)
    devphi_u,
    /// de Vaucouleurs fit position angle (+N thru E)
    devphi_g,
    /// de Vaucouleurs fit position angle (+N thru E)
    devphi_r,
    /// de Vaucouleurs fit position angle (+N thru E)
    devphi_i,
    /// de Vaucouleurs fit position angle (+N thru E)
    devphi_z,
    /// de Vaucouleurs magnitude fit
    devmag_u,
    /// de Vaucouleurs magnitude fit
    devmag_g,
    /// de Vaucouleurs magnitude fit
    devmag_r,
    /// de Vaucouleurs magnitude fit
    devmag_i,
    /// de Vaucouleurs magnitude fit
    devmag_z,
    /// de Vaucouleurs magnitude fit error
    devmagerr_u,
    /// de Vaucouleurs magnitude fit error
    devmagerr_g,
    /// de Vaucouleurs magnitude fit error
    devmagerr_r,
    /// de Vaucouleurs magnitude fit error
    devmagerr_i,
    /// de Vaucouleurs magnitude fit error
    devmagerr_z,
    /// de Vaucouleurs magnitude fit
    devflux_u,
    /// de Vaucouleurs magnitude fit
    devflux_g,
    /// de Vaucouleurs magnitude fit
    devflux_r,
    /// de Vaucouleurs magnitude fit
    devflux_i,
    /// de Vaucouleurs magnitude fit
    devflux_z,
    /// de Vaucouleurs magnitude fit inverse variance
    devfluxivar_u,
    /// de Vaucouleurs magnitude fit inverse variance
    devfluxivar_g,
    /// de Vaucouleurs magnitude fit inverse variance
    devfluxivar_r,
    /// de Vaucouleurs magnitude fit inverse variance
    devfluxivar_i,
    /// de Vaucouleurs magnitude fit inverse variance
    devfluxivar_z,
    /// Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    exprad_u,
    /// Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    exprad_g,
    /// Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    exprad_r,
    /// Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    exprad_i,
    /// Exponential fit scale radius, here defined to be the same as the half-light radius, also called the effective radius.
    exprad_z,
    /// Exponential fit scale radius error
    expraderr_u,
    /// Exponential fit scale radius error
    expraderr_g,
    /// Exponential fit scale radius error
    expraderr_r,
    /// Exponential fit scale radius error
    expraderr_i,
    /// Exponential fit scale radius error
    expraderr_z,
    /// Exponential fit b/a
    expab_u,
    /// Exponential fit b/a
    expab_g,
    /// Exponential fit b/a
    expab_r,
    /// Exponential fit b/a
    expab_i,
    /// Exponential fit b/a
    expab_z,
    /// Exponential fit b/a
    expaberr_u,
    /// Exponential fit b/a
    expaberr_g,
    /// Exponential fit b/a
    expaberr_r,
    /// Exponential fit b/a
    expaberr_i,
    /// Exponential fit b/a
    expaberr_z,
    /// Exponential fit position angle (+N thru E)
    expphi_u,
    /// Exponential fit position angle (+N thru E)
    expphi_g,
    /// Exponential fit position angle (+N thru E)
    expphi_r,
    /// Exponential fit position angle (+N thru E)
    expphi_i,
    /// Exponential fit position angle (+N thru E)
    expphi_z,
    /// Exponential fit magnitude
    expmag_u,
    /// Exponential fit magnitude
    expmag_g,
    /// Exponential fit magnitude
    expmag_r,
    /// Exponential fit magnitude
    expmag_i,
    /// Exponential fit magnitude
    expmag_z,
    /// Exponential fit magnitude error
    expmagerr_u,
    /// Exponential fit magnitude error
    expmagerr_g,
    /// Exponential fit magnitude error
    expmagerr_r,
    /// Exponential fit magnitude error
    expmagerr_i,
    /// Exponential fit magnitude error
    expmagerr_z,
    /// better of DeV/Exp magnitude fit
    modelmag_u,
    /// better of DeV/Exp magnitude fit
    modelmag_g,
    /// better of DeV/Exp magnitude fit
    modelmag_r,
    /// better of DeV/Exp magnitude fit
    modelmag_i,
    /// better of DeV/Exp magnitude fit
    modelmag_z,
    /// Error in better of DeV/Exp magnitude fit
    modelmagerr_u,
    /// Error in better of DeV/Exp magnitude fit
    modelmagerr_g,
    /// Error in better of DeV/Exp magnitude fit
    modelmagerr_r,
    /// Error in better of DeV/Exp magnitude fit
    modelmagerr_i,
    /// Error in better of DeV/Exp magnitude fit
    modelmagerr_z,
    /// DeV+Exp magnitude
    cmodelmag_u,
    /// DeV+Exp magnitude
    cmodelmag_g,
    /// DeV+Exp magnitude
    cmodelmag_r,
    /// DeV+Exp magnitude
    cmodelmag_i,
    /// DeV+Exp magnitude
    cmodelmag_z,
    /// DeV+Exp magnitude error
    cmodelmagerr_u,
    /// DeV+Exp magnitude error
    cmodelmagerr_g,
    /// DeV+Exp magnitude error
    cmodelmagerr_r,
    /// DeV+Exp magnitude error
    cmodelmagerr_i,
    /// DeV+Exp magnitude error
    cmodelmagerr_z,
    /// Exponential fit flux
    expflux_u,
    /// Exponential fit flux
    expflux_g,
    /// Exponential fit flux
    expflux_r,
    /// Exponential fit flux
    expflux_i,
    /// Exponential fit flux
    expflux_z,
    /// Exponential fit flux inverse variance
    expfluxivar_u,
    /// Exponential fit flux inverse variance
    expfluxivar_g,
    /// Exponential fit flux inverse variance
    expfluxivar_r,
    /// Exponential fit flux inverse variance
    expfluxivar_i,
    /// Exponential fit flux inverse variance
    expfluxivar_z,
    /// better of DeV/Exp flux fit
    modelflux_u,
    /// better of DeV/Exp flux fit
    modelflux_g,
    /// better of DeV/Exp flux fit
    modelflux_r,
    /// better of DeV/Exp flux fit
    modelflux_i,
    /// better of DeV/Exp flux fit
    modelflux_z,
    /// Inverse variance in better of DeV/Exp flux fit
    modelfluxivar_u,
    /// Inverse variance in better of DeV/Exp flux fit
    modelfluxivar_g,
    /// Inverse variance in better of DeV/Exp flux fit
    modelfluxivar_r,
    /// Inverse variance in better of DeV/Exp flux fit
    modelfluxivar_i,
    /// Inverse variance in better of DeV/Exp flux fit
    modelfluxivar_z,
    /// better of DeV+Exp flux
    cmodelflux_u,
    /// better of DeV+Exp flux
    cmodelflux_g,
    /// better of DeV+Exp flux
    cmodelflux_r,
    /// better of DeV+Exp flux
    cmodelflux_i,
    /// better of DeV+Exp flux
    cmodelflux_z,
    /// Inverse variance in DeV+Exp flux fit
    cmodelfluxivar_u,
    /// Inverse variance in DeV+Exp flux fit
    cmodelfluxivar_g,
    /// Inverse variance in DeV+Exp flux fit
    cmodelfluxivar_r,
    /// Inverse variance in DeV+Exp flux fit
    cmodelfluxivar_i,
    /// Inverse variance in DeV+Exp flux fit
    cmodelfluxivar_z,
    /// Aperture flux within 7.3 arcsec
    aperflux7_u,
    /// Aperture flux within 7.3 arcsec
    aperflux7_g,
    /// Aperture flux within 7.3 arcsec
    aperflux7_r,
    /// Aperture flux within 7.3 arcsec
    aperflux7_i,
    /// Aperture flux within 7.3 arcsec
    aperflux7_z,
    /// Inverse variance of aperture flux within 7.3 arcsec
    aperflux7ivar_u,
    /// Inverse variance of aperture flux within 7.3 arcsec
    aperflux7ivar_g,
    /// Inverse variance of aperture flux within 7.3 arcsec
    aperflux7ivar_r,
    /// Inverse variance of aperture flux within 7.3 arcsec
    aperflux7ivar_i,
    /// Inverse variance of aperture flux within 7.3 arcsec
    aperflux7ivar_z,
    /// Star ln(likelihood)
    lnlstar_u,
    /// Star ln(likelihood)
    lnlstar_g,
    /// Star ln(likelihood)
    lnlstar_r,
    /// Star ln(likelihood)
    lnlstar_i,
    /// Star ln(likelihood)
    lnlstar_z,
    /// Exponential disk fit ln(likelihood)
    lnlexp_u,
    /// Exponential disk fit ln(likelihood)
    lnlexp_g,
    /// Exponential disk fit ln(likelihood)
    lnlexp_r,
    /// Exponential disk fit ln(likelihood)
    lnlexp_i,
    /// Exponential disk fit ln(likelihood)
    lnlexp_z,
    /// de Vaucouleurs fit ln(likelihood)
    lnldev_u,
    /// de Vaucouleurs fit ln(likelihood)
    lnldev_g,
    /// de Vaucouleurs fit ln(likelihood)
    lnldev_r,
    /// de Vaucouleurs fit ln(likelihood)
    lnldev_i,
    /// de Vaucouleurs fit ln(likelihood)
    lnldev_z,
    /// Weight of deV component in deV+Exp model
    fracdev_u,
    /// Weight of deV component in deV+Exp model
    fracdev_g,
    /// Weight of deV component in deV+Exp model
    fracdev_r,
    /// Weight of deV component in deV+Exp model
    fracdev_i,
    /// Weight of deV component in deV+Exp model
    fracdev_z,
    /// Object detection flags per band
    flags_u,
    /// Object detection flags per band
    flags_g,
    /// Object detection flags per band
    flags_r,
    /// Object detection flags per band
    flags_i,
    /// Object detection flags per band
    flags_z,
    /// Object type classification per band
    type_u,
    /// Object type classification per band
    type_g,
    /// Object type classification per band
    type_r,
    /// Object type classification per band
    type_i,
    /// Object type classification per band
    type_z,
    /// Probablity object is a star in each filter.
    probpsf_u,
    /// Probablity object is a star in each filter.
    probpsf_g,
    /// Probablity object is a star in each filter.
    probpsf_r,
    /// Probablity object is a star in each filter.
    probpsf_i,
    /// Probablity object is a star in each filter.
    probpsf_z,
    /// J2000 Right Ascension (r-band)
    ra,
    /// J2000 Declination (r-band)
    dec,
    /// unit vector for ra+dec
    cx,
    /// unit vector for ra+dec
    cy,
    /// unit vector for ra+dec
    cz,
    /// Error in RA (* cos(Dec), that is, proper units)
    raerr,
    /// Error in Dec
    decerr,
    /// Galactic latitude
    b,
    /// Galactic longitude
    l,
    /// filter position RA minus final RA (* cos(Dec), that is, proper units)
    offsetra_u,
    /// filter position RA minus final RA (* cos(Dec), that is, proper units)
    offsetra_g,
    /// filter position RA minus final RA (* cos(Dec), that is, proper units)
    offsetra_r,
    /// filter position RA minus final RA (* cos(Dec), that is, proper units)
    offsetra_i,
    /// filter position RA minus final RA (* cos(Dec), that is, proper units)
    offsetra_z,
    /// filter position Dec minus final Dec
    offsetdec_u,
    /// filter position Dec minus final Dec
    offsetdec_g,
    /// filter position Dec minus final Dec
    offsetdec_r,
    /// filter position Dec minus final Dec
    offsetdec_i,
    /// filter position Dec minus final Dec
    offsetdec_z,
    /// Extinction in u-band
    extinction_u,
    /// Extinction in g-band
    extinction_g,
    /// Extinction in r-band
    extinction_r,
    /// Extinction in i-band
    extinction_i,
    /// Extinction in z-band
    extinction_z,
    /// FWHM in u-band
    psffwhm_u,
    /// FWHM in g-band
    psffwhm_g,
    /// FWHM in r-band
    psffwhm_r,
    /// FWHM in i-band
    psffwhm_i,
    /// FWHM in z-band
    psffwhm_z,
    /// Date of observation
    mjd,
    /// Airmass at time of observation in u-band
    airmass_u,
    /// Airmass at time of observation in g-band
    airmass_g,
    /// Airmass at time of observation in r-band
    airmass_r,
    /// Airmass at time of observation in i-band
    airmass_i,
    /// Airmass at time of observation in z-band
    airmass_z,
    /// Degrees to add to CCD-aligned angle to convert to E of N
    phioffset_u,
    /// Degrees to add to CCD-aligned angle to convert to E of N
    phioffset_g,
    /// Degrees to add to CCD-aligned angle to convert to E of N
    phioffset_r,
    /// Degrees to add to CCD-aligned angle to convert to E of N
    phioffset_i,
    /// Degrees to add to CCD-aligned angle to convert to E of N
    phioffset_z,
    /// Number of Profile Bins
    nprof_u,
    /// Number of Profile Bins
    nprof_g,
    /// Number of Profile Bins
    nprof_r,
    /// Number of Profile Bins
    nprof_i,
    /// Number of Profile Bins
    nprof_z,
    /// Load Version
    loadversion,
    /// 20-deep hierarchical trangular mesh ID of this object
    htmid,
    /// Link to the field this object is in
    fieldid,
    /// Pointer to parent (if object deblended) or BRIGHT detection (if object has one), else 0
    parentid,
    /// Pointer to the spectrum of object, if exists, else 0
    specobjid,
    /// Shorthand alias for modelMag
    u,
    /// Shorthand alias for modelMag
    g,
    /// Shorthand alias for modelMag
    r,
    /// Shorthand alias for modelMag
    i,
    /// Shorthand alias for modelMag
    z,
    /// Error in modelMag alias
    err_u,
    /// Error in modelMag alias
    err_g,
    /// Error in modelMag alias
    err_r,
    /// Error in modelMag alias
    err_i,
    /// Error in modelMag alias
    err_z,
    /// Simplified mag, corrected for extinction: modelMag-extinction
    dered_u,
    /// Simplified mag, corrected for extinction: modelMag-extinction
    dered_g,
    /// Simplified mag, corrected for extinction: modelMag-extinction
    dered_r,
    /// Simplified mag, corrected for extinction: modelMag-extinction
    dered_i,
    /// Simplified mag, corrected for extinction: modelMag-extinction
    dered_z,
    /// Cloud camera status for observation in u-band
    cloudcam_u,
    /// Cloud camera status for observation in g-band
    cloudcam_g,
    /// Cloud camera status for observation in r-band
    cloudcam_r,
    /// Cloud camera status for observation in i-band
    cloudcam_i,
    /// Cloud camera status for observation in z-band
    cloudcam_z,
    /// Resolve status of object
    resolvestatus,
    /// Unique identifier from global resolve
    thingid,
    /// What balkan object is in from window
    balkanid,
    /// Number of observations of this object
    nobserve,
    /// Number of detections of this object
    ndetect,
    /// Number of observations of this object near an edge
    nedge,
    /// Quality of field (0-1)
    score,
    /// Calibration status in u-band
    calibstatus_u,
    /// Calibration status in g-band
    calibstatus_g,
    /// Calibration status in r-band
    calibstatus_r,
    /// Calibration status in i-band
    calibstatus_i,
    /// Calibration status in z-band
    calibstatus_z,
    /// nanomaggies per count in u-band
    nmgypercount_u,
    /// nanomaggies per count in g-band
    nmgypercount_g,
    /// nanomaggies per count in r-band
    nmgypercount_r,
    /// nanomaggies per count in i-band
    nmgypercount_i,
    /// nanomaggies per count in z-band
    nmgypercount_z,
    /// time of observation (TAI) in each filter
    tai_u,
    /// time of observation (TAI) in each filter
    tai_g,
    /// time of observation (TAI) in each filter
    tai_r,
    /// time of observation (TAI) in each filter
    tai_i,
    /// time of observation (TAI) in each filter
    tai_z,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the sdssdr13_photoprimary table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::objid.to_string());
    col_strings.push(Col::skyversion.to_string());
    col_strings.push(Col::run.to_string());
    col_strings.push(Col::rerun.to_string());
    col_strings.push(Col::camcol.to_string());
    col_strings.push(Col::field.to_string());
    col_strings.push(Col::obj.to_string());
    col_strings.push(Col::mode.to_string());
    col_strings.push(Col::nchild.to_string());
    col_strings.push(Col::type_col.to_string());
    col_strings.push(Col::clean.to_string());
    col_strings.push(Col::probpsf.to_string());
    col_strings.push(Col::insidemask.to_string());
    col_strings.push(Col::flags.to_string());
    col_strings.push(Col::rowc.to_string());
    col_strings.push(Col::rowcerr.to_string());
    col_strings.push(Col::colc.to_string());
    col_strings.push(Col::colcerr.to_string());
    col_strings.push(Col::rowv.to_string());
    col_strings.push(Col::rowverr.to_string());
    col_strings.push(Col::colv.to_string());
    col_strings.push(Col::colverr.to_string());
    col_strings.push(Col::rowc_u.to_string());
    col_strings.push(Col::rowc_g.to_string());
    col_strings.push(Col::rowc_r.to_string());
    col_strings.push(Col::rowc_i.to_string());
    col_strings.push(Col::rowc_z.to_string());
    col_strings.push(Col::rowcerr_u.to_string());
    col_strings.push(Col::rowcerr_g.to_string());
    col_strings.push(Col::rowcerr_r.to_string());
    col_strings.push(Col::rowcerr_i.to_string());
    col_strings.push(Col::rowcerr_z.to_string());
    col_strings.push(Col::colc_u.to_string());
    col_strings.push(Col::colc_g.to_string());
    col_strings.push(Col::colc_r.to_string());
    col_strings.push(Col::colc_i.to_string());
    col_strings.push(Col::colc_z.to_string());
    col_strings.push(Col::colcerr_u.to_string());
    col_strings.push(Col::colcerr_g.to_string());
    col_strings.push(Col::colcerr_r.to_string());
    col_strings.push(Col::colcerr_i.to_string());
    col_strings.push(Col::colcerr_z.to_string());
    col_strings.push(Col::sky_u.to_string());
    col_strings.push(Col::sky_g.to_string());
    col_strings.push(Col::sky_r.to_string());
    col_strings.push(Col::sky_i.to_string());
    col_strings.push(Col::sky_z.to_string());
    col_strings.push(Col::skyivar_u.to_string());
    col_strings.push(Col::skyivar_g.to_string());
    col_strings.push(Col::skyivar_r.to_string());
    col_strings.push(Col::skyivar_i.to_string());
    col_strings.push(Col::skyivar_z.to_string());
    col_strings.push(Col::psfmag_u.to_string());
    col_strings.push(Col::psfmag_g.to_string());
    col_strings.push(Col::psfmag_r.to_string());
    col_strings.push(Col::psfmag_i.to_string());
    col_strings.push(Col::psfmag_z.to_string());
    col_strings.push(Col::psfmagerr_u.to_string());
    col_strings.push(Col::psfmagerr_g.to_string());
    col_strings.push(Col::psfmagerr_r.to_string());
    col_strings.push(Col::psfmagerr_i.to_string());
    col_strings.push(Col::psfmagerr_z.to_string());
    col_strings.push(Col::fibermag_u.to_string());
    col_strings.push(Col::fibermag_g.to_string());
    col_strings.push(Col::fibermag_r.to_string());
    col_strings.push(Col::fibermag_i.to_string());
    col_strings.push(Col::fibermag_z.to_string());
    col_strings.push(Col::fibermagerr_u.to_string());
    col_strings.push(Col::fibermagerr_g.to_string());
    col_strings.push(Col::fibermagerr_r.to_string());
    col_strings.push(Col::fibermagerr_i.to_string());
    col_strings.push(Col::fibermagerr_z.to_string());
    col_strings.push(Col::fiber2mag_u.to_string());
    col_strings.push(Col::fiber2mag_g.to_string());
    col_strings.push(Col::fiber2mag_r.to_string());
    col_strings.push(Col::fiber2mag_i.to_string());
    col_strings.push(Col::fiber2mag_z.to_string());
    col_strings.push(Col::fiber2magerr_u.to_string());
    col_strings.push(Col::fiber2magerr_g.to_string());
    col_strings.push(Col::fiber2magerr_r.to_string());
    col_strings.push(Col::fiber2magerr_i.to_string());
    col_strings.push(Col::fiber2magerr_z.to_string());
    col_strings.push(Col::petromag_u.to_string());
    col_strings.push(Col::petromag_g.to_string());
    col_strings.push(Col::petromag_r.to_string());
    col_strings.push(Col::petromag_i.to_string());
    col_strings.push(Col::petromag_z.to_string());
    col_strings.push(Col::petromagerr_u.to_string());
    col_strings.push(Col::petromagerr_g.to_string());
    col_strings.push(Col::petromagerr_r.to_string());
    col_strings.push(Col::petromagerr_i.to_string());
    col_strings.push(Col::petromagerr_z.to_string());
    col_strings.push(Col::psfflux_u.to_string());
    col_strings.push(Col::psfflux_g.to_string());
    col_strings.push(Col::psfflux_r.to_string());
    col_strings.push(Col::psfflux_i.to_string());
    col_strings.push(Col::psfflux_z.to_string());
    col_strings.push(Col::psffluxivar_u.to_string());
    col_strings.push(Col::psffluxivar_g.to_string());
    col_strings.push(Col::psffluxivar_r.to_string());
    col_strings.push(Col::psffluxivar_i.to_string());
    col_strings.push(Col::psffluxivar_z.to_string());
    col_strings.push(Col::fiberflux_u.to_string());
    col_strings.push(Col::fiberflux_g.to_string());
    col_strings.push(Col::fiberflux_r.to_string());
    col_strings.push(Col::fiberflux_i.to_string());
    col_strings.push(Col::fiberflux_z.to_string());
    col_strings.push(Col::fiberfluxivar_u.to_string());
    col_strings.push(Col::fiberfluxivar_g.to_string());
    col_strings.push(Col::fiberfluxivar_r.to_string());
    col_strings.push(Col::fiberfluxivar_i.to_string());
    col_strings.push(Col::fiberfluxivar_z.to_string());
    col_strings.push(Col::fiber2flux_u.to_string());
    col_strings.push(Col::fiber2flux_g.to_string());
    col_strings.push(Col::fiber2flux_r.to_string());
    col_strings.push(Col::fiber2flux_i.to_string());
    col_strings.push(Col::fiber2flux_z.to_string());
    col_strings.push(Col::fiber2fluxivar_u.to_string());
    col_strings.push(Col::fiber2fluxivar_g.to_string());
    col_strings.push(Col::fiber2fluxivar_r.to_string());
    col_strings.push(Col::fiber2fluxivar_i.to_string());
    col_strings.push(Col::fiber2fluxivar_z.to_string());
    col_strings.push(Col::petroflux_u.to_string());
    col_strings.push(Col::petroflux_g.to_string());
    col_strings.push(Col::petroflux_r.to_string());
    col_strings.push(Col::petroflux_i.to_string());
    col_strings.push(Col::petroflux_z.to_string());
    col_strings.push(Col::petrofluxivar_u.to_string());
    col_strings.push(Col::petrofluxivar_g.to_string());
    col_strings.push(Col::petrofluxivar_r.to_string());
    col_strings.push(Col::petrofluxivar_i.to_string());
    col_strings.push(Col::petrofluxivar_z.to_string());
    col_strings.push(Col::petrorad_u.to_string());
    col_strings.push(Col::petrorad_g.to_string());
    col_strings.push(Col::petrorad_r.to_string());
    col_strings.push(Col::petrorad_i.to_string());
    col_strings.push(Col::petrorad_z.to_string());
    col_strings.push(Col::petroraderr_u.to_string());
    col_strings.push(Col::petroraderr_g.to_string());
    col_strings.push(Col::petroraderr_r.to_string());
    col_strings.push(Col::petroraderr_i.to_string());
    col_strings.push(Col::petroraderr_z.to_string());
    col_strings.push(Col::petror50_u.to_string());
    col_strings.push(Col::petror50_g.to_string());
    col_strings.push(Col::petror50_r.to_string());
    col_strings.push(Col::petror50_i.to_string());
    col_strings.push(Col::petror50_z.to_string());
    col_strings.push(Col::petror50err_u.to_string());
    col_strings.push(Col::petror50err_g.to_string());
    col_strings.push(Col::petror50err_r.to_string());
    col_strings.push(Col::petror50err_i.to_string());
    col_strings.push(Col::petror50err_z.to_string());
    col_strings.push(Col::petror90_u.to_string());
    col_strings.push(Col::petror90_g.to_string());
    col_strings.push(Col::petror90_r.to_string());
    col_strings.push(Col::petror90_i.to_string());
    col_strings.push(Col::petror90_z.to_string());
    col_strings.push(Col::petror90err_u.to_string());
    col_strings.push(Col::petror90err_g.to_string());
    col_strings.push(Col::petror90err_r.to_string());
    col_strings.push(Col::petror90err_i.to_string());
    col_strings.push(Col::petror90err_z.to_string());
    col_strings.push(Col::q_u.to_string());
    col_strings.push(Col::q_g.to_string());
    col_strings.push(Col::q_r.to_string());
    col_strings.push(Col::q_i.to_string());
    col_strings.push(Col::q_z.to_string());
    col_strings.push(Col::qerr_u.to_string());
    col_strings.push(Col::qerr_g.to_string());
    col_strings.push(Col::qerr_r.to_string());
    col_strings.push(Col::qerr_i.to_string());
    col_strings.push(Col::qerr_z.to_string());
    col_strings.push(Col::u_u.to_string());
    col_strings.push(Col::u_g.to_string());
    col_strings.push(Col::u_r.to_string());
    col_strings.push(Col::u_i.to_string());
    col_strings.push(Col::u_z.to_string());
    col_strings.push(Col::uerr_u.to_string());
    col_strings.push(Col::uerr_g.to_string());
    col_strings.push(Col::uerr_r.to_string());
    col_strings.push(Col::uerr_i.to_string());
    col_strings.push(Col::uerr_z.to_string());
    col_strings.push(Col::me1_u.to_string());
    col_strings.push(Col::me1_g.to_string());
    col_strings.push(Col::me1_r.to_string());
    col_strings.push(Col::me1_i.to_string());
    col_strings.push(Col::me1_z.to_string());
    col_strings.push(Col::me2_u.to_string());
    col_strings.push(Col::me2_g.to_string());
    col_strings.push(Col::me2_r.to_string());
    col_strings.push(Col::me2_i.to_string());
    col_strings.push(Col::me2_z.to_string());
    col_strings.push(Col::me1e1err_u.to_string());
    col_strings.push(Col::me1e1err_g.to_string());
    col_strings.push(Col::me1e1err_r.to_string());
    col_strings.push(Col::me1e1err_i.to_string());
    col_strings.push(Col::me1e1err_z.to_string());
    col_strings.push(Col::me1e2err_u.to_string());
    col_strings.push(Col::me1e2err_g.to_string());
    col_strings.push(Col::me1e2err_r.to_string());
    col_strings.push(Col::me1e2err_i.to_string());
    col_strings.push(Col::me1e2err_z.to_string());
    col_strings.push(Col::me2e2err_u.to_string());
    col_strings.push(Col::me2e2err_g.to_string());
    col_strings.push(Col::me2e2err_r.to_string());
    col_strings.push(Col::me2e2err_i.to_string());
    col_strings.push(Col::me2e2err_z.to_string());
    col_strings.push(Col::mrrcc_u.to_string());
    col_strings.push(Col::mrrcc_g.to_string());
    col_strings.push(Col::mrrcc_r.to_string());
    col_strings.push(Col::mrrcc_i.to_string());
    col_strings.push(Col::mrrcc_z.to_string());
    col_strings.push(Col::mrrccerr_u.to_string());
    col_strings.push(Col::mrrccerr_g.to_string());
    col_strings.push(Col::mrrccerr_r.to_string());
    col_strings.push(Col::mrrccerr_i.to_string());
    col_strings.push(Col::mrrccerr_z.to_string());
    col_strings.push(Col::mcr4_u.to_string());
    col_strings.push(Col::mcr4_g.to_string());
    col_strings.push(Col::mcr4_r.to_string());
    col_strings.push(Col::mcr4_i.to_string());
    col_strings.push(Col::mcr4_z.to_string());
    col_strings.push(Col::me1psf_u.to_string());
    col_strings.push(Col::me1psf_g.to_string());
    col_strings.push(Col::me1psf_r.to_string());
    col_strings.push(Col::me1psf_i.to_string());
    col_strings.push(Col::me1psf_z.to_string());
    col_strings.push(Col::me2psf_u.to_string());
    col_strings.push(Col::me2psf_g.to_string());
    col_strings.push(Col::me2psf_r.to_string());
    col_strings.push(Col::me2psf_i.to_string());
    col_strings.push(Col::me2psf_z.to_string());
    col_strings.push(Col::mrrccpsf_u.to_string());
    col_strings.push(Col::mrrccpsf_g.to_string());
    col_strings.push(Col::mrrccpsf_r.to_string());
    col_strings.push(Col::mrrccpsf_i.to_string());
    col_strings.push(Col::mrrccpsf_z.to_string());
    col_strings.push(Col::mcr4psf_u.to_string());
    col_strings.push(Col::mcr4psf_g.to_string());
    col_strings.push(Col::mcr4psf_r.to_string());
    col_strings.push(Col::mcr4psf_i.to_string());
    col_strings.push(Col::mcr4psf_z.to_string());
    col_strings.push(Col::devrad_u.to_string());
    col_strings.push(Col::devrad_g.to_string());
    col_strings.push(Col::devrad_r.to_string());
    col_strings.push(Col::devrad_i.to_string());
    col_strings.push(Col::devrad_z.to_string());
    col_strings.push(Col::devraderr_u.to_string());
    col_strings.push(Col::devraderr_g.to_string());
    col_strings.push(Col::devraderr_r.to_string());
    col_strings.push(Col::devraderr_i.to_string());
    col_strings.push(Col::devraderr_z.to_string());
    col_strings.push(Col::devab_u.to_string());
    col_strings.push(Col::devab_g.to_string());
    col_strings.push(Col::devab_r.to_string());
    col_strings.push(Col::devab_i.to_string());
    col_strings.push(Col::devab_z.to_string());
    col_strings.push(Col::devaberr_u.to_string());
    col_strings.push(Col::devaberr_g.to_string());
    col_strings.push(Col::devaberr_r.to_string());
    col_strings.push(Col::devaberr_i.to_string());
    col_strings.push(Col::devaberr_z.to_string());
    col_strings.push(Col::devphi_u.to_string());
    col_strings.push(Col::devphi_g.to_string());
    col_strings.push(Col::devphi_r.to_string());
    col_strings.push(Col::devphi_i.to_string());
    col_strings.push(Col::devphi_z.to_string());
    col_strings.push(Col::devmag_u.to_string());
    col_strings.push(Col::devmag_g.to_string());
    col_strings.push(Col::devmag_r.to_string());
    col_strings.push(Col::devmag_i.to_string());
    col_strings.push(Col::devmag_z.to_string());
    col_strings.push(Col::devmagerr_u.to_string());
    col_strings.push(Col::devmagerr_g.to_string());
    col_strings.push(Col::devmagerr_r.to_string());
    col_strings.push(Col::devmagerr_i.to_string());
    col_strings.push(Col::devmagerr_z.to_string());
    col_strings.push(Col::devflux_u.to_string());
    col_strings.push(Col::devflux_g.to_string());
    col_strings.push(Col::devflux_r.to_string());
    col_strings.push(Col::devflux_i.to_string());
    col_strings.push(Col::devflux_z.to_string());
    col_strings.push(Col::devfluxivar_u.to_string());
    col_strings.push(Col::devfluxivar_g.to_string());
    col_strings.push(Col::devfluxivar_r.to_string());
    col_strings.push(Col::devfluxivar_i.to_string());
    col_strings.push(Col::devfluxivar_z.to_string());
    col_strings.push(Col::exprad_u.to_string());
    col_strings.push(Col::exprad_g.to_string());
    col_strings.push(Col::exprad_r.to_string());
    col_strings.push(Col::exprad_i.to_string());
    col_strings.push(Col::exprad_z.to_string());
    col_strings.push(Col::expraderr_u.to_string());
    col_strings.push(Col::expraderr_g.to_string());
    col_strings.push(Col::expraderr_r.to_string());
    col_strings.push(Col::expraderr_i.to_string());
    col_strings.push(Col::expraderr_z.to_string());
    col_strings.push(Col::expab_u.to_string());
    col_strings.push(Col::expab_g.to_string());
    col_strings.push(Col::expab_r.to_string());
    col_strings.push(Col::expab_i.to_string());
    col_strings.push(Col::expab_z.to_string());
    col_strings.push(Col::expaberr_u.to_string());
    col_strings.push(Col::expaberr_g.to_string());
    col_strings.push(Col::expaberr_r.to_string());
    col_strings.push(Col::expaberr_i.to_string());
    col_strings.push(Col::expaberr_z.to_string());
    col_strings.push(Col::expphi_u.to_string());
    col_strings.push(Col::expphi_g.to_string());
    col_strings.push(Col::expphi_r.to_string());
    col_strings.push(Col::expphi_i.to_string());
    col_strings.push(Col::expphi_z.to_string());
    col_strings.push(Col::expmag_u.to_string());
    col_strings.push(Col::expmag_g.to_string());
    col_strings.push(Col::expmag_r.to_string());
    col_strings.push(Col::expmag_i.to_string());
    col_strings.push(Col::expmag_z.to_string());
    col_strings.push(Col::expmagerr_u.to_string());
    col_strings.push(Col::expmagerr_g.to_string());
    col_strings.push(Col::expmagerr_r.to_string());
    col_strings.push(Col::expmagerr_i.to_string());
    col_strings.push(Col::expmagerr_z.to_string());
    col_strings.push(Col::modelmag_u.to_string());
    col_strings.push(Col::modelmag_g.to_string());
    col_strings.push(Col::modelmag_r.to_string());
    col_strings.push(Col::modelmag_i.to_string());
    col_strings.push(Col::modelmag_z.to_string());
    col_strings.push(Col::modelmagerr_u.to_string());
    col_strings.push(Col::modelmagerr_g.to_string());
    col_strings.push(Col::modelmagerr_r.to_string());
    col_strings.push(Col::modelmagerr_i.to_string());
    col_strings.push(Col::modelmagerr_z.to_string());
    col_strings.push(Col::cmodelmag_u.to_string());
    col_strings.push(Col::cmodelmag_g.to_string());
    col_strings.push(Col::cmodelmag_r.to_string());
    col_strings.push(Col::cmodelmag_i.to_string());
    col_strings.push(Col::cmodelmag_z.to_string());
    col_strings.push(Col::cmodelmagerr_u.to_string());
    col_strings.push(Col::cmodelmagerr_g.to_string());
    col_strings.push(Col::cmodelmagerr_r.to_string());
    col_strings.push(Col::cmodelmagerr_i.to_string());
    col_strings.push(Col::cmodelmagerr_z.to_string());
    col_strings.push(Col::expflux_u.to_string());
    col_strings.push(Col::expflux_g.to_string());
    col_strings.push(Col::expflux_r.to_string());
    col_strings.push(Col::expflux_i.to_string());
    col_strings.push(Col::expflux_z.to_string());
    col_strings.push(Col::expfluxivar_u.to_string());
    col_strings.push(Col::expfluxivar_g.to_string());
    col_strings.push(Col::expfluxivar_r.to_string());
    col_strings.push(Col::expfluxivar_i.to_string());
    col_strings.push(Col::expfluxivar_z.to_string());
    col_strings.push(Col::modelflux_u.to_string());
    col_strings.push(Col::modelflux_g.to_string());
    col_strings.push(Col::modelflux_r.to_string());
    col_strings.push(Col::modelflux_i.to_string());
    col_strings.push(Col::modelflux_z.to_string());
    col_strings.push(Col::modelfluxivar_u.to_string());
    col_strings.push(Col::modelfluxivar_g.to_string());
    col_strings.push(Col::modelfluxivar_r.to_string());
    col_strings.push(Col::modelfluxivar_i.to_string());
    col_strings.push(Col::modelfluxivar_z.to_string());
    col_strings.push(Col::cmodelflux_u.to_string());
    col_strings.push(Col::cmodelflux_g.to_string());
    col_strings.push(Col::cmodelflux_r.to_string());
    col_strings.push(Col::cmodelflux_i.to_string());
    col_strings.push(Col::cmodelflux_z.to_string());
    col_strings.push(Col::cmodelfluxivar_u.to_string());
    col_strings.push(Col::cmodelfluxivar_g.to_string());
    col_strings.push(Col::cmodelfluxivar_r.to_string());
    col_strings.push(Col::cmodelfluxivar_i.to_string());
    col_strings.push(Col::cmodelfluxivar_z.to_string());
    col_strings.push(Col::aperflux7_u.to_string());
    col_strings.push(Col::aperflux7_g.to_string());
    col_strings.push(Col::aperflux7_r.to_string());
    col_strings.push(Col::aperflux7_i.to_string());
    col_strings.push(Col::aperflux7_z.to_string());
    col_strings.push(Col::aperflux7ivar_u.to_string());
    col_strings.push(Col::aperflux7ivar_g.to_string());
    col_strings.push(Col::aperflux7ivar_r.to_string());
    col_strings.push(Col::aperflux7ivar_i.to_string());
    col_strings.push(Col::aperflux7ivar_z.to_string());
    col_strings.push(Col::lnlstar_u.to_string());
    col_strings.push(Col::lnlstar_g.to_string());
    col_strings.push(Col::lnlstar_r.to_string());
    col_strings.push(Col::lnlstar_i.to_string());
    col_strings.push(Col::lnlstar_z.to_string());
    col_strings.push(Col::lnlexp_u.to_string());
    col_strings.push(Col::lnlexp_g.to_string());
    col_strings.push(Col::lnlexp_r.to_string());
    col_strings.push(Col::lnlexp_i.to_string());
    col_strings.push(Col::lnlexp_z.to_string());
    col_strings.push(Col::lnldev_u.to_string());
    col_strings.push(Col::lnldev_g.to_string());
    col_strings.push(Col::lnldev_r.to_string());
    col_strings.push(Col::lnldev_i.to_string());
    col_strings.push(Col::lnldev_z.to_string());
    col_strings.push(Col::fracdev_u.to_string());
    col_strings.push(Col::fracdev_g.to_string());
    col_strings.push(Col::fracdev_r.to_string());
    col_strings.push(Col::fracdev_i.to_string());
    col_strings.push(Col::fracdev_z.to_string());
    col_strings.push(Col::flags_u.to_string());
    col_strings.push(Col::flags_g.to_string());
    col_strings.push(Col::flags_r.to_string());
    col_strings.push(Col::flags_i.to_string());
    col_strings.push(Col::flags_z.to_string());
    col_strings.push(Col::type_u.to_string());
    col_strings.push(Col::type_g.to_string());
    col_strings.push(Col::type_r.to_string());
    col_strings.push(Col::type_i.to_string());
    col_strings.push(Col::type_z.to_string());
    col_strings.push(Col::probpsf_u.to_string());
    col_strings.push(Col::probpsf_g.to_string());
    col_strings.push(Col::probpsf_r.to_string());
    col_strings.push(Col::probpsf_i.to_string());
    col_strings.push(Col::probpsf_z.to_string());
    col_strings.push(Col::ra.to_string());
    col_strings.push(Col::dec.to_string());
    col_strings.push(Col::cx.to_string());
    col_strings.push(Col::cy.to_string());
    col_strings.push(Col::cz.to_string());
    col_strings.push(Col::raerr.to_string());
    col_strings.push(Col::decerr.to_string());
    col_strings.push(Col::b.to_string());
    col_strings.push(Col::l.to_string());
    col_strings.push(Col::offsetra_u.to_string());
    col_strings.push(Col::offsetra_g.to_string());
    col_strings.push(Col::offsetra_r.to_string());
    col_strings.push(Col::offsetra_i.to_string());
    col_strings.push(Col::offsetra_z.to_string());
    col_strings.push(Col::offsetdec_u.to_string());
    col_strings.push(Col::offsetdec_g.to_string());
    col_strings.push(Col::offsetdec_r.to_string());
    col_strings.push(Col::offsetdec_i.to_string());
    col_strings.push(Col::offsetdec_z.to_string());
    col_strings.push(Col::extinction_u.to_string());
    col_strings.push(Col::extinction_g.to_string());
    col_strings.push(Col::extinction_r.to_string());
    col_strings.push(Col::extinction_i.to_string());
    col_strings.push(Col::extinction_z.to_string());
    col_strings.push(Col::psffwhm_u.to_string());
    col_strings.push(Col::psffwhm_g.to_string());
    col_strings.push(Col::psffwhm_r.to_string());
    col_strings.push(Col::psffwhm_i.to_string());
    col_strings.push(Col::psffwhm_z.to_string());
    col_strings.push(Col::mjd.to_string());
    col_strings.push(Col::airmass_u.to_string());
    col_strings.push(Col::airmass_g.to_string());
    col_strings.push(Col::airmass_r.to_string());
    col_strings.push(Col::airmass_i.to_string());
    col_strings.push(Col::airmass_z.to_string());
    col_strings.push(Col::phioffset_u.to_string());
    col_strings.push(Col::phioffset_g.to_string());
    col_strings.push(Col::phioffset_r.to_string());
    col_strings.push(Col::phioffset_i.to_string());
    col_strings.push(Col::phioffset_z.to_string());
    col_strings.push(Col::nprof_u.to_string());
    col_strings.push(Col::nprof_g.to_string());
    col_strings.push(Col::nprof_r.to_string());
    col_strings.push(Col::nprof_i.to_string());
    col_strings.push(Col::nprof_z.to_string());
    col_strings.push(Col::loadversion.to_string());
    col_strings.push(Col::htmid.to_string());
    col_strings.push(Col::fieldid.to_string());
    col_strings.push(Col::parentid.to_string());
    col_strings.push(Col::specobjid.to_string());
    col_strings.push(Col::u.to_string());
    col_strings.push(Col::g.to_string());
    col_strings.push(Col::r.to_string());
    col_strings.push(Col::i.to_string());
    col_strings.push(Col::z.to_string());
    col_strings.push(Col::err_u.to_string());
    col_strings.push(Col::err_g.to_string());
    col_strings.push(Col::err_r.to_string());
    col_strings.push(Col::err_i.to_string());
    col_strings.push(Col::err_z.to_string());
    col_strings.push(Col::dered_u.to_string());
    col_strings.push(Col::dered_g.to_string());
    col_strings.push(Col::dered_r.to_string());
    col_strings.push(Col::dered_i.to_string());
    col_strings.push(Col::dered_z.to_string());
    col_strings.push(Col::cloudcam_u.to_string());
    col_strings.push(Col::cloudcam_g.to_string());
    col_strings.push(Col::cloudcam_r.to_string());
    col_strings.push(Col::cloudcam_i.to_string());
    col_strings.push(Col::cloudcam_z.to_string());
    col_strings.push(Col::resolvestatus.to_string());
    col_strings.push(Col::thingid.to_string());
    col_strings.push(Col::balkanid.to_string());
    col_strings.push(Col::nobserve.to_string());
    col_strings.push(Col::ndetect.to_string());
    col_strings.push(Col::nedge.to_string());
    col_strings.push(Col::score.to_string());
    col_strings.push(Col::calibstatus_u.to_string());
    col_strings.push(Col::calibstatus_g.to_string());
    col_strings.push(Col::calibstatus_r.to_string());
    col_strings.push(Col::calibstatus_i.to_string());
    col_strings.push(Col::calibstatus_z.to_string());
    col_strings.push(Col::nmgypercount_u.to_string());
    col_strings.push(Col::nmgypercount_g.to_string());
    col_strings.push(Col::nmgypercount_r.to_string());
    col_strings.push(Col::nmgypercount_i.to_string());
    col_strings.push(Col::nmgypercount_z.to_string());
    col_strings.push(Col::tai_u.to_string());
    col_strings.push(Col::tai_g.to_string());
    col_strings.push(Col::tai_r.to_string());
    col_strings.push(Col::tai_i.to_string());
    col_strings.push(Col::tai_z.to_string());
    map.insert(sdssdr13_photoprimary.string(), col_strings);
}
