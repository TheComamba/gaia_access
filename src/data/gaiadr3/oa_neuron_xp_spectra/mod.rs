// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the oa_neuron_xp_spectra table.

use crate::traits::{Column, Table};

/// This is the table hosting the prototype BP/RP spectrum corresponding to each of the neurons of the Self-Organised-Map produced by the Apsis module OA. Other neuron attributes, such as statistics on various parameters, are available in another table: {\tt OaNeuronInformation}. See Section~\ref{ssec:cu8par_apsis_oa} for further details.
#[allow(non_camel_case_types)]
pub struct oa_neuron_xp_spectra;

impl Table for oa_neuron_xp_spectra {
    fn string(&self) -> String {
        "oa_neuron_xp_spectra".to_string()
    }
}

/// The columns in the oa_neuron_xp_spectra table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// Solution Identifier
    solution_id,
    /// Neuron identifier
    neuron_id,
    /// Row index of the neuron in the Self-Organised Map lattice
    neuron_row_index,
    /// Column index of the neuron in the Self-Organised Map lattice
    neuron_column_index,
    /// Normalised flux at wavelength {\tt xpSpectrumPrototypeWavelength} for the preprocessed XP spectrum that best represents the neuron (prototype)
    xp_spectrum_prototype_flux,
    /// Wavelength associated with the XP spectrum flux values
    xp_spectrum_prototype_wavelength,
    /// Normalised flux at wavelength {\tt xpSpectrumPrototypeWavelength} for the preprocessed XP spectrum corresponding to the neuron template  
    xp_spectrum_template_flux,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the oa_neuron_xp_spectra table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::solution_id.to_string());
    col_strings.push(Col::neuron_id.to_string());
    col_strings.push(Col::neuron_row_index.to_string());
    col_strings.push(Col::neuron_column_index.to_string());
    col_strings.push(Col::xp_spectrum_prototype_flux.to_string());
    col_strings.push(Col::xp_spectrum_prototype_wavelength.to_string());
    col_strings.push(Col::xp_spectrum_template_flux.to_string());
    map.insert(oa_neuron_xp_spectra.string(), col_strings);
}
