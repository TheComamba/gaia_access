// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the vari_classifier_class_definition table.

use crate::traits::{Column, Table};

/// Table with detailed descriptions of published classes for each classifier described in {\tt VariClassifierDefinition} and used in table {\tt VariClassifierResult}.
///
/// In DR3, this table contains the details of a classifier with {\tt classifierName}=`nTransits:5+.
///
///
#[allow(non_camel_case_types)]
pub struct vari_classifier_class_definition;

impl Table for vari_classifier_class_definition {
    fn string(&self) -> String {
        "vari_classifier_class_definition".to_string()
    }
}

/// The columns in the vari_classifier_class_definition table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// Solution Identifier
    solution_id,
    /// Name of the classifier that is detailed in this entry
    classifier_name,
    /// Name of the published class from this classifier
    class_name,
    /// Description of the published class from this classifier
    class_description,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the vari_classifier_class_definition table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::solution_id.to_string());
    col_strings.push(Col::classifier_name.to_string());
    col_strings.push(Col::class_name.to_string());
    col_strings.push(Col::class_description.to_string());
    map.insert(vari_classifier_class_definition.string(), col_strings);
}
