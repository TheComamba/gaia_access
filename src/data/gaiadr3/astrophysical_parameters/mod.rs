// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the astrophysical_parameters table.

use crate::traits::{Column, Table};

/// This is the main table containing the 1D astrophysical parameters produced by the Apsis processing chain developed in Gaia DPAC CU8 (see Chapter~\ref{chap:cu8par}). Additional parameters can be found in table {\tt AstrophysicalParametersSupp}.
#[allow(non_camel_case_types)]
pub struct astrophysical_parameters;

impl Table for astrophysical_parameters {
    fn string(&self) -> String {
        "astrophysical_parameters".to_string()
    }
}

/// The columns in the astrophysical_parameters table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// Solution Identifier
    solution_id,
    /// Source Identifier
    source_id,
    /// Probability from DSC-Combmod of being a quasar (data used: BP/RP spectrum, photometry, astrometry)
    classprob_dsc_combmod_quasar,
    /// Probability from DSC-Combmod of being a galaxy (data used: BP/RP spectrum, photometry, astrometry)
    classprob_dsc_combmod_galaxy,
    /// Probability from DSC-Combmod of being a single star (but not a white dwarf) (data used: BP/RP spectrum, photometry, astrometry)
    classprob_dsc_combmod_star,
    /// Probability from DSC-Combmod of being a white dwarf (data used: BP/RP spectrum, photometry, astrometry)
    classprob_dsc_combmod_whitedwarf,
    /// Probability from DSC-Combmod of being a binary star (data used: BP/RP spectrum, photometry, astrometry)
    classprob_dsc_combmod_binarystar,
    /// Probability from DSC-Specmod of being a quasar (data used: BP/RP spectrum)
    classprob_dsc_specmod_quasar,
    /// Probability from DSC-Specmod of being a galaxy (data used: BP/RP spectrum)
    classprob_dsc_specmod_galaxy,
    /// Probability from DSC-Specmod of being a single star (but not a white dwarf) (data used: BP/RP spectrum)
    classprob_dsc_specmod_star,
    /// Probability from DSC-Specmod of being a white dwarf (data used: BP/RP spectrum)
    classprob_dsc_specmod_whitedwarf,
    /// Probability from DSC-Specmod of being a binary star (data used: BP/RP spectrum)
    classprob_dsc_specmod_binarystar,
    /// Probability from DSC-Allosmod of being a quasar (data used: photometry, astrometry)
    classprob_dsc_allosmod_quasar,
    /// Probability from DSC-Allosmod of being a galaxy (data used: photometry, astrometry)
    classprob_dsc_allosmod_galaxy,
    /// Probability from DSC-Allosmod of being a star (data used: photometry, astrometry)
    classprob_dsc_allosmod_star,
    /// Effective temperature from GSP-Phot Aeneas best library using BP/RP spectra
    teff_gspphot,
    /// Lower confidence level (16%) of effective temperature from GSP-Phot Aeneas best library using BP/RP spectra
    teff_gspphot_lower,
    /// Upper confidence level (84%) of effective temperature from GSP-Phot Aeneas best library using BP/RP spectra
    teff_gspphot_upper,
    /// Surface gravity from GSP-Phot Aeneas best library using BP/RP spectra
    logg_gspphot,
    /// Lower confidence level (16%) of surface gravity from GSP-Phot Aeneas best library using BP/RP spectra
    logg_gspphot_lower,
    /// Upper confidence level (84%) of surface gravity from GSP-Phot Aeneas best library using BP/RP spectra
    logg_gspphot_upper,
    /// Iron abundance from GSP-Phot Aeneas best library using BP/RP spectra
    mh_gspphot,
    /// Lower confidence level (16%) of iron abundance from GSP-Phot Aeneas best library using BP/RP spectra
    mh_gspphot_lower,
    /// Upper confidence level (84%) of iron abundance from GSP-Phot Aeneas best library using BP/RP spectra
    mh_gspphot_upper,
    /// Distance from GSP-Phot Aeneas best library using BP/RP spectra
    distance_gspphot,
    /// Lower confidence level (16%) of distance from GSP-Phot Aeneas best library using BP/RP spectra
    distance_gspphot_lower,
    /// Upper confidence level (84%) of distance from GSP-Phot Aeneas best library using BP/RP spectra
    distance_gspphot_upper,
    /// Monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas best library using BP/RP spectra
    azero_gspphot,
    /// Lower confidence level (16%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas best library using BP/RP spectra
    azero_gspphot_lower,
    /// Upper confidence level (84%) of monochromatic extinction $A_0$ at 547.7nm from GSP-Phot Aeneas best library using BP/RP spectra
    azero_gspphot_upper,
    /// Extinction in G band from GSP-Phot Aeneas best library using BP/RP spectra
    ag_gspphot,
    /// Lower confidence level (16%) of extinction in G band from GSP-Phot Aeneas best library using BP/RP spectra
    ag_gspphot_lower,
    /// Upper confidence level (84%) of extinction in G band from GSP-Phot Aeneas best library using BP/RP spectra
    ag_gspphot_upper,
    /// Extinction in $G_{\rm BP}$ band from GSP-Phot Aeneas best library using BP/RP spectra
    abp_gspphot,
    /// Lower confidence level (16%) of extinction in $G_{\rm BP}$ band from GSP-Phot Aeneas best library using BP/RP spectra
    abp_gspphot_lower,
    /// Upper confidence level (84%) of extinction in $G_{\rm BP}$ band from GSP-Phot Aeneas best library using BP/RP spectra
    abp_gspphot_upper,
    /// Extinction in $G_{\rm RP}$ band from GSP-Phot Aeneas best library using BP/RP spectra
    arp_gspphot,
    /// Lower confidence level (16%) of extinction in $G_{\rm RP}$ band from GSP-Phot Aeneas best library using BP/RP spectra
    arp_gspphot_lower,
    /// Upper confidence level (84%) of extinction in $G_{\rm RP}$ band from GSP-Phot Aeneas best library using BP/RP spectra
    arp_gspphot_upper,
    /// Reddening $E(G_{\rm BP} - G_{\rm RP})$ from GSP-Phot Aeneas best library using BP/RP spectra
    ebpminrp_gspphot,
    /// Lower confidence level (16%) of reddening  $E(G_{\rm BP} - G_{\rm RP})$ from GSP-Phot Aeneas best library using BP/RP spectra
    ebpminrp_gspphot_lower,
    /// Upper confidence level (84%) of reddening  $E(G_{\rm BP} - G_{\rm RP})$ from GSP-Phot Aeneas best library using BP/RP spectra
    ebpminrp_gspphot_upper,
    /// Absolute magnitude $M_{\rm G}$ from GSP-Phot Aeneas best library using BP/RP spectra
    mg_gspphot,
    /// Lower confidence level (16%) of absolute magnitude $M_{\rm G}$ from GSP-Phot Aeneas best library using BP/RP spectra
    mg_gspphot_lower,
    /// Upper confidence level (84%) of absolute magnitude $M_{\rm G}$ from GSP-Phot Aeneas best library using BP/RP spectra
    mg_gspphot_upper,
    /// Radius from GSP-Phot Aeneas best library using BP/RP spectra
    radius_gspphot,
    /// Lower confidence level (16%) of radius from GSP-Phot Aeneas best library using BP/RP spectra
    radius_gspphot_lower,
    /// Upper confidence level (84%) of radius from GSP-Phot Aeneas best library using BP/RP spectra
    radius_gspphot_upper,
    /// Goodness-of-fit score (mean log-posterior of MCMC) of GSP-Phot Aeneas MCMC best library
    logposterior_gspphot,
    /// MCMC acceptance rate of GSP-Phot Aeneas MCMC best library
    mcmcaccept_gspphot,
    /// Name of library that achieves the highest mean log-posterior in MCMC samples and was used to derive GSP-Phot parameters in this table
    libname_gspphot,
    /// Effective temperature from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    teff_gspspec,
    /// 16th percentile of effective temperature from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    teff_gspspec_lower,
    /// 84th percentile of effective temperature from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    teff_gspspec_upper,
    /// Logarithm of the stellar surface gravity from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    logg_gspspec,
    /// 16th percentile of the logarithm of the stellar surface gravity from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    logg_gspspec_lower,
    /// 84th percentile of the logarithm of the stellar surface gravity from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    logg_gspspec_upper,
    /// Global metallicity [M/H] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    mh_gspspec,
    /// 16th percentile of global metallicity [M/H] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    mh_gspspec_lower,
    /// 84th percentile of global metallicity [M/H] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    mh_gspspec_upper,
    /// Abundance of alpha-elements [alpha/Fe] with respect to iron from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    alphafe_gspspec,
    /// 16th percentile of the abundance of alpha-elements [alpha/Fe] with respect to iron from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    alphafe_gspspec_lower,
    /// 84th percentile of the abundance of alpha-elements [alpha/Fe] with respect to iron from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    alphafe_gspspec_upper,
    /// Abundance of neutral iron [Fe/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt femGspspecNlines}
    fem_gspspec,
    /// 16th percentile of the abundance of neutral iron [Fe/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    fem_gspspec_lower,
    /// 84th percentile of the abundance of neutral iron [Fe/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    fem_gspspec_upper,
    /// Number of lines used for [Fe/M] abundance estimation
    fem_gspspec_nlines,
    /// Uncertainty estimation of [Fe/M] abundance using N lines of the element, given in {\tt femGspspecNlines}
    fem_gspspec_linescatter,
    /// Abundance of Silicon [Si/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt sifeGspspecNlines}
    sife_gspspec,
    /// 16th percentile of the abundance of silicon [Si/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    sife_gspspec_lower,
    /// 84th percentile of the abundance of silicon [Si/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    sife_gspspec_upper,
    /// Number of lines used for [Si/Fe] abundance estimation
    sife_gspspec_nlines,
    /// Uncertainty estimation of [Si/Fe] abundance using N lines of the element, given in {\tt sifeGspspecNlines}
    sife_gspspec_linescatter,
    /// Abundance of Calcium [Ca/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt cafeGspspecNlines}
    cafe_gspspec,
    /// 16th percentile of the abundance of Calcium [Ca/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    cafe_gspspec_lower,
    /// 84th percentile of the abundance of Calcium [Ca/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    cafe_gspspec_upper,
    /// Number of lines used for [Ca/Fe] abundance estimation
    cafe_gspspec_nlines,
    /// Uncertainty estimation of [Ca/Fe] abundance using N lines of the element, given in {\tt cafeGspspecNlines}
    cafe_gspspec_linescatter,
    /// Abundance of Titanium [Ti/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt tifeGspspecNlines}  
    tife_gspspec,
    /// 16th percentile of the abundance of Titanium [Ti/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    tife_gspspec_lower,
    /// 84th percentile of the abundance of Titanium [Ti/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    tife_gspspec_upper,
    /// Number of lines used for [Ti/Fe] abundance estimation
    tife_gspspec_nlines,
    /// Uncertainty estimation of [Ti/Fe] abundance using N lines of the element, given in {\tt tifeGspspecNlines}
    tife_gspspec_linescatter,
    /// Abundance of Magnesium [Mg/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt mgfeGspspecNlines}
    mgfe_gspspec,
    /// 16th percentile of the abundance of Magnesium [Mg/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    mgfe_gspspec_lower,
    /// 84th percentile of the abundance of Magnesium [Mg/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    mgfe_gspspec_upper,
    /// Number of lines used for [Mg/Fe] abundance estimation
    mgfe_gspspec_nlines,
    /// Uncertainty estimation of [Mg/Fe] abundance using N lines of the element, given in {\tt mgfeGspspecNlines}
    mgfe_gspspec_linescatter,
    /// Abundance of neodymium [Nd/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt ndfeGspspecNlines}
    ndfe_gspspec,
    /// 16th percentile of the abundance of neodymium [Nd/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    ndfe_gspspec_lower,
    /// 84th percentile of the abundance of neodymium [Nd/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    ndfe_gspspec_upper,
    /// Number of lines used for [Nd/Fe] abundance estimation
    ndfe_gspspec_nlines,
    /// Uncertainty estimation of [Nd/Fe] abundance using N lines of the element, given in {\tt ndfeGspspecNlines}
    ndfe_gspspec_linescatter,
    /// Abundance of ionised iron [FeII/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt feiimGspspecNlines}
    feiim_gspspec,
    /// 16th percentile of the abundance of ionised iron [FeII/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    feiim_gspspec_lower,
    /// 84th percentile of the abundance of ionised iron [FeII/M] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    feiim_gspspec_upper,
    /// Number of lines used for [FeII/M] abundance estimation
    feiim_gspspec_nlines,
    /// Uncertainty estimation of [FeII/M] abundance using N lines of the element, given in {\tt feiimGspspecNlines}
    feiim_gspspec_linescatter,
    /// Abundance of Sulphur [S/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt sfeGspspecNlines}
    sfe_gspspec,
    /// 16th percentile of the abundance of Sulphur [S/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    sfe_gspspec_lower,
    /// 84th percentile of the abundance of Sulphur [S/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    sfe_gspspec_upper,
    /// Number of lines used for [S/Fe] abundance estimation
    sfe_gspspec_nlines,
    /// Uncertainty estimation of [S/Fe] abundance using N lines of the element, given in {\tt sfeGspspecNlines}
    sfe_gspspec_linescatter,
    /// Abundance of Zirconium [Zr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt zrfeGspspecNlines}
    zrfe_gspspec,
    /// 16th percentile of the abundance of Zirconium [Zr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    zrfe_gspspec_lower,
    /// 84th percentile of the abundance of Zirconium [Zr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    zrfe_gspspec_upper,
    /// Number of lines used for [Zr/Fe] abundance estimation
    zrfe_gspspec_nlines,
    /// Uncertainty estimation of [Zr/Fe] abundance using N lines of the element, given in {\tt zrfeGspspecNlines}
    zrfe_gspspec_linescatter,
    /// Abundance of Nitrogen [N/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt nfeGspspecNlines}
    nfe_gspspec,
    /// 16th percentile of the abundance of Nitrogen [N/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    nfe_gspspec_lower,
    /// 84th percentile of the abundance of Nitrogen [N/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    nfe_gspspec_upper,
    /// Number of lines used for [N/Fe] abundance estimation
    nfe_gspspec_nlines,
    /// Uncertainty estimation of [N/Fe] abundance using N lines of the element, given in {\tt nfeGspspecNlines}
    nfe_gspspec_linescatter,
    /// Abundance of Chromium [Cr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt crfeGspspecNlines}
    crfe_gspspec,
    /// 16th percentile of the abundance of Chromium [Cr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    crfe_gspspec_lower,
    /// 84th percentile of the abundance of Chromium [Cr/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    crfe_gspspec_upper,
    /// Number of lines used for [Cr/Fe] abundance estimation
    crfe_gspspec_nlines,
    /// Uncertainty estimation of [Cr/Fe] abundance using N lines of the element, given in {\tt crfeGspspecNlines}
    crfe_gspspec_linescatter,
    /// Abundance of Cerium [Ce/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt cefeGspspecNlines}
    cefe_gspspec,
    /// 16th percentile of the abundance of Cerium [Ce/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    cefe_gspspec_lower,
    /// 84th percentile of the abundance of Cerium [Ce/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    cefe_gspspec_upper,
    /// Number of lines used for [Ce/Fe] abundance estimation
    cefe_gspspec_nlines,
    /// Uncertainty estimation of [Ce/Fe] abundance using N lines of the element, given in {\tt cefeGspspecNlines}
    cefe_gspspec_linescatter,
    /// Abundance of Nickel [Ni/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations, applied to the individual N lines of the element, given in {\tt nifeGspspecNlines}
    nife_gspspec,
    /// 16th percentile of the abundance of Nickel [Ni/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    nife_gspspec_lower,
    /// 84th percentile of the abundance of Nickel [Ni/Fe] from GSP-Spec MatisseGauguin using RVS spectra and Monte Carlo realisations
    nife_gspspec_upper,
    /// Number of lines used for [Ni/Fe] abundance estimation
    nife_gspspec_nlines,
    /// Uncertainty estimation of [Ni/Fe] abundance using N lines of the element, given in {\tt nifeGspspecNlines}
    nife_gspspec_linescatter,
    /// Equivalent witdh of cyanogen absorption line, derived from RVS spectra
    cn0ew_gspspec,
    /// Uncertainty of equivalent witdh of cyanogen absorption line, derived from RVS spectra
    cn0ew_gspspec_uncertainty,
    /// Central wavelength of cyanogen line, derived from RVS spectra using DIB algorithm
    cn0_gspspec_centralline,
    /// Width of cyoanogen line, derived from RVS spectra using DIB algorithm
    cn0_gspspec_width,
    /// DIB central wavelength from GSP-Spec MatisseGauguin using RVS spectra
    ///
    dib_gspspec_lambda,
    /// Uncertainty on DIB central wavelength from GSP-Spec MatisseGauguin using RVS spectra
    dib_gspspec_lambda_uncertainty,
    /// Equivalent width of the DIB from GSP-Spec MatisseGauguin using RVS spectra
    dibew_gspspec,
    /// Global uncertainty on DIB equivalent width value using DIB algorithm
    dibew_gspspec_uncertainty,
    /// Uncertainty on DIB equivalent width value occuring from noise part
    dibewnoise_gspspec_uncertainty,
    /// Depth ($p_0$ parameter) of the DIB derived from a Gaussian model fit
    dibp0_gspspec,
    /// Width ($p_2$ parameter) of the DIB derived from a Gaussian model fit
    dibp2_gspspec,
    /// Uncertainty on the {\tt dibp2Gspspec} parameter
    dibp2_gspspec_uncertainty,
    /// Quality flag of the DIB computation
    ///
    dibqf_gspspec,
    /// Catalogue flags for GSP-Spec MatisseGauguin
    flags_gspspec,
    /// Logarithm of the goodness-of-fit for the GSP-Spec MatisseGauguin parameters
    logchisq_gspspec,
    /// Halpha pseudo-equivalent width from ESP-ELS
    ew_espels_halpha,
    /// Uncertainty of the Halpha pseudo-equivalent width from ESP-ELS
    ew_espels_halpha_uncertainty,
    /// Quality flag of the Halpha pseudo-equivalent width from ESP-ELS
    ew_espels_halpha_flag,
    /// Halpha pseudo-equivalent width from ESP-ELS measured on the synthetic spectrum
    ew_espels_halpha_model,
    /// Adopted ELS class label from ESP-ELS
    classlabel_espels,
    /// Quality flag of the adopted ELS class label from ESP-ELS
    classlabel_espels_flag,
    /// Probability from ESP-ELS of being a Wolf-Rayet star of type WC
    classprob_espels_wcstar,
    /// Probability from ESP-ELS of being a Wolf-Rayet star of type WN
    classprob_espels_wnstar,
    /// Probability from ESP-ELS of being a Be Star
    classprob_espels_bestar,
    /// Probability from ESP-ELS of being a T Tauri Star
    classprob_espels_ttauristar,
    /// Probability from ESP-ELS of being a Herbig Ae/Be Star
    classprob_espels_herbigstar,
    /// Probability from ESP-ELS of being an active M dwarf Star
    classprob_espels_dmestar,
    /// Probability from ESP-ELS of being a planetary nebula
    classprob_espels_pne,
    /// Monochromatic interstellar extinction, A$_\mathrm{0}$, from ESP-HS
    azero_esphs,
    /// Uncertainty at a 68% confidence level on A$_\mathrm{0}$ from ESP-HS
    azero_esphs_uncertainty,
    /// Intersterstellar extinction in G band from ESP-HS
    ag_esphs,
    /// Uncertainty on $A_{\rm G}$ from ESP-HS
    ag_esphs_uncertainty,
    /// Reddening $E(G_{\rm BP} - G_{\rm RP})$ from ESP-HS
    ebpminrp_esphs,
    /// Uncertainty on $E(G_{\rm BP} - G_{\rm RP})$ from ESP-HS
    ebpminrp_esphs_uncertainty,
    /// Effective temperature from ESP-HS
    teff_esphs,
    /// Uncertainty at a 68% confidence level on the effective temperature from ESP-HS
    teff_esphs_uncertainty,
    /// Surface gravity from ESP-HS
    logg_esphs,
    /// Uncertainty at a 68% confidence level on the surface gravity from ESP-HS
    logg_esphs_uncertainty,
    /// Projected rotational velocity from ESP-HS
    vsini_esphs,
    /// Uncertainty on the projected rotational velocity from ESP-HS
    vsini_esphs_uncertainty,
    /// Quality flag of the ESP-HS parametrisation
    flags_esphs,
    /// Spectral type from ESP-ELS
    spectraltype_esphs,
    /// Chromospheric activity index from ESP-CS, measured on the calcium triplet using RVS spectra
    activityindex_espcs,
    /// Uncertainty in the chromospheric activity index from ESP-CS
    activityindex_espcs_uncertainty,
    /// Source of input stellar parameters for the computation of the activity index by ESP-CS
    activityindex_espcs_input,
    /// Effective temperature estimate from ESP-UCD based on the RP spectrum
    teff_espucd,
    /// Uncertainty of the effective temperature estimate produced by ESP-UCD
    teff_espucd_uncertainty,
    /// Quality flags of the ESP-UCD parameter estimates
    flags_espucd,
    /// Radius of the star from FLAME using {\tt teffGspphot} and {\tt lumFlame}
    radius_flame,
    /// Lower confidence level (16%) of {\tt radiusFlame}
    radius_flame_lower,
    /// Upper confidence level (84%) of {\tt radiusFlame}
    radius_flame_upper,
    /// Luminosity of the star from FLAME using G band magnitude, extinction ({\tt agGspphot}),  parallax or distance, and a bolometric correction {\tt bcFlame}
    lum_flame,
    /// Lower confidence level (16%) of {\tt lumFlame}
    lum_flame_lower,
    /// Upper confidence level (84%) of {\tt lumFlame}
    lum_flame_upper,
    /// Mass of the star from FLAME using stellar models, {\tt lumFlame}, and {\tt teffGspphot}
    mass_flame,
    /// Lower confidence level (16%) of {\tt massFlame}
    mass_flame_lower,
    /// Upper confidence level (84%) of {\tt massFlame}
    mass_flame_upper,
    /// Age of the star from FLAME using stellar models, see {\tt massFlame} for details
    age_flame,
    /// Lower confidence level (16%) of {\tt ageFlame}
    age_flame_lower,
    /// Upper confidence level (84%) of {\tt ageFlame}
    age_flame_upper,
    /// Flags indicating quality and processing information from FLAME
    flags_flame,
    /// Evolutionary stage of the star from FLAME using stellar models, see {\tt massFlame} for details
    evolstage_flame,
    /// Gravitational redshift from FLAME using {\tt radiusFlame} and {\tt loggGspphot}
    gravredshift_flame,
    /// Lower confidence level (16%) of {\tt gravredshiftFlame}
    gravredshift_flame_lower,
    /// Upper confidence level (84%) of {\tt gravredshiftFlame}
    gravredshift_flame_upper,
    /// Bolometric correction used to derive {\tt lumFlame}
    bc_flame,
    /// Metallicity of the source treated as a binary system from MSC using BP/RP spectra and parallax
    mh_msc,
    /// Upper confidence level (84%) of the metallicity from MSC using BP/RP spectra and parallax
    mh_msc_upper,
    /// Lower confidence level (16%) of the metallicity from MSC using BP/RP spectra and parallax
    mh_msc_lower,
    /// Monochromatic extinction $A_0$ at 547.7nm of the source treated as a binary system from MSC using BP/RP spectra and parallax
    azero_msc,
    /// Upper confidence level (84%) of monochromatic extinction $A_0$ at 547.7nm from MSC using BP/RP spectra and parallax
    azero_msc_upper,
    /// Lower confidence level (16%) of monochromatic extinction $A_0$ at 547.7nm from MSC using BP/RP spectra and parallax
    azero_msc_lower,
    /// Distance from MSC using BP/RP spectra and parallax
    distance_msc,
    /// Upper confidence level (84%) of distance from MSC using BP/RP spectra and parallax
    distance_msc_upper,
    /// Lower confidence level (16%) of distance from MSC using BP/RP spectra and parallax
    distance_msc_lower,
    /// Effective temperature of the primary from MSC using BP/RP spectra and parallax
    teff_msc1,
    /// Upper confidence level (84%) of effective temperature of the primary from MSC using BP/RP spectra and parallax
    teff_msc1_upper,
    /// Lower confidence level (16%) of effective temperature of the primary from MSC using BP/RP spectra and parallax
    teff_msc1_lower,
    /// Effective temperature of the secondary from MSC using BP/RP spectra and parallax
    teff_msc2,
    /// Upper confidence level (84%) of effective temperature of the secondary from MSC using BP/RP spectra and parallax
    teff_msc2_upper,
    /// Lower confidence level (16%) of effective temperature of the secondary from MSC using BP/RP spectra and parallax
    teff_msc2_lower,
    /// Surface gravity of the primary from MSC using BP/RP spectra and parallax
    logg_msc1,
    /// Upper confidence level (84%) of surface gravity of the primary from MSC using BP/RP spectra and parallax
    logg_msc1_upper,
    /// Lower confidence level (16%) of surface gravity of the primary from MSC using BP/RP spectra and parallax
    logg_msc1_lower,
    /// Surface gravity of the secondary from MSC using BP/RP spectra and parallax
    logg_msc2,
    /// Upper confidence level (84%) of surface gravity of the secondary from MSC using BP/RP spectra and parallax
    logg_msc2_upper,
    /// Lower confidence level (16%) of surface gravity of the secondary from MSC using BP/RP spectra and parallax
    logg_msc2_lower,
    /// Extinction in G band of the source treated as a binary system from MSC using BP/RP spectra and parallax
    ag_msc,
    /// Upper confidence level (84%) of extinction in G band from MSC using BP/RP spectra and parallax
    ag_msc_upper,
    /// Lower confidence level (16%) of extinction in G band from MSC using BP/RP spectra and parallax
    ag_msc_lower,
    /// Goodness-of-fit score (normalised log-posterior) of MSC MCMC
    logposterior_msc,
    /// Mean MCMC acceptance rate of MSC MCMC
    mcmcaccept_msc,
    /// Mean drift of the MSC MCMC chain in units of parameter standard deviation
    mcmcdrift_msc,
    /// Flag indicating quality information from MSC
    flags_msc,
    /// Identifier of the OA SOM map neuron that represents the source
    neuron_oa_id,
    /// Distance between the source XP spectra and the OA neuron XP prototype that represents the source
    neuron_oa_dist,
    /// Percentile rank according to the distance distribution of the OA neuron that represents the source
    neuron_oa_dist_percentile_rank,
    /// Flags indicating quality and processing information from OA
    flags_oa,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the astrophysical_parameters table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::solution_id.to_string());
    col_strings.push(Col::source_id.to_string());
    col_strings.push(Col::classprob_dsc_combmod_quasar.to_string());
    col_strings.push(Col::classprob_dsc_combmod_galaxy.to_string());
    col_strings.push(Col::classprob_dsc_combmod_star.to_string());
    col_strings.push(Col::classprob_dsc_combmod_whitedwarf.to_string());
    col_strings.push(Col::classprob_dsc_combmod_binarystar.to_string());
    col_strings.push(Col::classprob_dsc_specmod_quasar.to_string());
    col_strings.push(Col::classprob_dsc_specmod_galaxy.to_string());
    col_strings.push(Col::classprob_dsc_specmod_star.to_string());
    col_strings.push(Col::classprob_dsc_specmod_whitedwarf.to_string());
    col_strings.push(Col::classprob_dsc_specmod_binarystar.to_string());
    col_strings.push(Col::classprob_dsc_allosmod_quasar.to_string());
    col_strings.push(Col::classprob_dsc_allosmod_galaxy.to_string());
    col_strings.push(Col::classprob_dsc_allosmod_star.to_string());
    col_strings.push(Col::teff_gspphot.to_string());
    col_strings.push(Col::teff_gspphot_lower.to_string());
    col_strings.push(Col::teff_gspphot_upper.to_string());
    col_strings.push(Col::logg_gspphot.to_string());
    col_strings.push(Col::logg_gspphot_lower.to_string());
    col_strings.push(Col::logg_gspphot_upper.to_string());
    col_strings.push(Col::mh_gspphot.to_string());
    col_strings.push(Col::mh_gspphot_lower.to_string());
    col_strings.push(Col::mh_gspphot_upper.to_string());
    col_strings.push(Col::distance_gspphot.to_string());
    col_strings.push(Col::distance_gspphot_lower.to_string());
    col_strings.push(Col::distance_gspphot_upper.to_string());
    col_strings.push(Col::azero_gspphot.to_string());
    col_strings.push(Col::azero_gspphot_lower.to_string());
    col_strings.push(Col::azero_gspphot_upper.to_string());
    col_strings.push(Col::ag_gspphot.to_string());
    col_strings.push(Col::ag_gspphot_lower.to_string());
    col_strings.push(Col::ag_gspphot_upper.to_string());
    col_strings.push(Col::abp_gspphot.to_string());
    col_strings.push(Col::abp_gspphot_lower.to_string());
    col_strings.push(Col::abp_gspphot_upper.to_string());
    col_strings.push(Col::arp_gspphot.to_string());
    col_strings.push(Col::arp_gspphot_lower.to_string());
    col_strings.push(Col::arp_gspphot_upper.to_string());
    col_strings.push(Col::ebpminrp_gspphot.to_string());
    col_strings.push(Col::ebpminrp_gspphot_lower.to_string());
    col_strings.push(Col::ebpminrp_gspphot_upper.to_string());
    col_strings.push(Col::mg_gspphot.to_string());
    col_strings.push(Col::mg_gspphot_lower.to_string());
    col_strings.push(Col::mg_gspphot_upper.to_string());
    col_strings.push(Col::radius_gspphot.to_string());
    col_strings.push(Col::radius_gspphot_lower.to_string());
    col_strings.push(Col::radius_gspphot_upper.to_string());
    col_strings.push(Col::logposterior_gspphot.to_string());
    col_strings.push(Col::mcmcaccept_gspphot.to_string());
    col_strings.push(Col::libname_gspphot.to_string());
    col_strings.push(Col::teff_gspspec.to_string());
    col_strings.push(Col::teff_gspspec_lower.to_string());
    col_strings.push(Col::teff_gspspec_upper.to_string());
    col_strings.push(Col::logg_gspspec.to_string());
    col_strings.push(Col::logg_gspspec_lower.to_string());
    col_strings.push(Col::logg_gspspec_upper.to_string());
    col_strings.push(Col::mh_gspspec.to_string());
    col_strings.push(Col::mh_gspspec_lower.to_string());
    col_strings.push(Col::mh_gspspec_upper.to_string());
    col_strings.push(Col::alphafe_gspspec.to_string());
    col_strings.push(Col::alphafe_gspspec_lower.to_string());
    col_strings.push(Col::alphafe_gspspec_upper.to_string());
    col_strings.push(Col::fem_gspspec.to_string());
    col_strings.push(Col::fem_gspspec_lower.to_string());
    col_strings.push(Col::fem_gspspec_upper.to_string());
    col_strings.push(Col::fem_gspspec_nlines.to_string());
    col_strings.push(Col::fem_gspspec_linescatter.to_string());
    col_strings.push(Col::sife_gspspec.to_string());
    col_strings.push(Col::sife_gspspec_lower.to_string());
    col_strings.push(Col::sife_gspspec_upper.to_string());
    col_strings.push(Col::sife_gspspec_nlines.to_string());
    col_strings.push(Col::sife_gspspec_linescatter.to_string());
    col_strings.push(Col::cafe_gspspec.to_string());
    col_strings.push(Col::cafe_gspspec_lower.to_string());
    col_strings.push(Col::cafe_gspspec_upper.to_string());
    col_strings.push(Col::cafe_gspspec_nlines.to_string());
    col_strings.push(Col::cafe_gspspec_linescatter.to_string());
    col_strings.push(Col::tife_gspspec.to_string());
    col_strings.push(Col::tife_gspspec_lower.to_string());
    col_strings.push(Col::tife_gspspec_upper.to_string());
    col_strings.push(Col::tife_gspspec_nlines.to_string());
    col_strings.push(Col::tife_gspspec_linescatter.to_string());
    col_strings.push(Col::mgfe_gspspec.to_string());
    col_strings.push(Col::mgfe_gspspec_lower.to_string());
    col_strings.push(Col::mgfe_gspspec_upper.to_string());
    col_strings.push(Col::mgfe_gspspec_nlines.to_string());
    col_strings.push(Col::mgfe_gspspec_linescatter.to_string());
    col_strings.push(Col::ndfe_gspspec.to_string());
    col_strings.push(Col::ndfe_gspspec_lower.to_string());
    col_strings.push(Col::ndfe_gspspec_upper.to_string());
    col_strings.push(Col::ndfe_gspspec_nlines.to_string());
    col_strings.push(Col::ndfe_gspspec_linescatter.to_string());
    col_strings.push(Col::feiim_gspspec.to_string());
    col_strings.push(Col::feiim_gspspec_lower.to_string());
    col_strings.push(Col::feiim_gspspec_upper.to_string());
    col_strings.push(Col::feiim_gspspec_nlines.to_string());
    col_strings.push(Col::feiim_gspspec_linescatter.to_string());
    col_strings.push(Col::sfe_gspspec.to_string());
    col_strings.push(Col::sfe_gspspec_lower.to_string());
    col_strings.push(Col::sfe_gspspec_upper.to_string());
    col_strings.push(Col::sfe_gspspec_nlines.to_string());
    col_strings.push(Col::sfe_gspspec_linescatter.to_string());
    col_strings.push(Col::zrfe_gspspec.to_string());
    col_strings.push(Col::zrfe_gspspec_lower.to_string());
    col_strings.push(Col::zrfe_gspspec_upper.to_string());
    col_strings.push(Col::zrfe_gspspec_nlines.to_string());
    col_strings.push(Col::zrfe_gspspec_linescatter.to_string());
    col_strings.push(Col::nfe_gspspec.to_string());
    col_strings.push(Col::nfe_gspspec_lower.to_string());
    col_strings.push(Col::nfe_gspspec_upper.to_string());
    col_strings.push(Col::nfe_gspspec_nlines.to_string());
    col_strings.push(Col::nfe_gspspec_linescatter.to_string());
    col_strings.push(Col::crfe_gspspec.to_string());
    col_strings.push(Col::crfe_gspspec_lower.to_string());
    col_strings.push(Col::crfe_gspspec_upper.to_string());
    col_strings.push(Col::crfe_gspspec_nlines.to_string());
    col_strings.push(Col::crfe_gspspec_linescatter.to_string());
    col_strings.push(Col::cefe_gspspec.to_string());
    col_strings.push(Col::cefe_gspspec_lower.to_string());
    col_strings.push(Col::cefe_gspspec_upper.to_string());
    col_strings.push(Col::cefe_gspspec_nlines.to_string());
    col_strings.push(Col::cefe_gspspec_linescatter.to_string());
    col_strings.push(Col::nife_gspspec.to_string());
    col_strings.push(Col::nife_gspspec_lower.to_string());
    col_strings.push(Col::nife_gspspec_upper.to_string());
    col_strings.push(Col::nife_gspspec_nlines.to_string());
    col_strings.push(Col::nife_gspspec_linescatter.to_string());
    col_strings.push(Col::cn0ew_gspspec.to_string());
    col_strings.push(Col::cn0ew_gspspec_uncertainty.to_string());
    col_strings.push(Col::cn0_gspspec_centralline.to_string());
    col_strings.push(Col::cn0_gspspec_width.to_string());
    col_strings.push(Col::dib_gspspec_lambda.to_string());
    col_strings.push(Col::dib_gspspec_lambda_uncertainty.to_string());
    col_strings.push(Col::dibew_gspspec.to_string());
    col_strings.push(Col::dibew_gspspec_uncertainty.to_string());
    col_strings.push(Col::dibewnoise_gspspec_uncertainty.to_string());
    col_strings.push(Col::dibp0_gspspec.to_string());
    col_strings.push(Col::dibp2_gspspec.to_string());
    col_strings.push(Col::dibp2_gspspec_uncertainty.to_string());
    col_strings.push(Col::dibqf_gspspec.to_string());
    col_strings.push(Col::flags_gspspec.to_string());
    col_strings.push(Col::logchisq_gspspec.to_string());
    col_strings.push(Col::ew_espels_halpha.to_string());
    col_strings.push(Col::ew_espels_halpha_uncertainty.to_string());
    col_strings.push(Col::ew_espels_halpha_flag.to_string());
    col_strings.push(Col::ew_espels_halpha_model.to_string());
    col_strings.push(Col::classlabel_espels.to_string());
    col_strings.push(Col::classlabel_espels_flag.to_string());
    col_strings.push(Col::classprob_espels_wcstar.to_string());
    col_strings.push(Col::classprob_espels_wnstar.to_string());
    col_strings.push(Col::classprob_espels_bestar.to_string());
    col_strings.push(Col::classprob_espels_ttauristar.to_string());
    col_strings.push(Col::classprob_espels_herbigstar.to_string());
    col_strings.push(Col::classprob_espels_dmestar.to_string());
    col_strings.push(Col::classprob_espels_pne.to_string());
    col_strings.push(Col::azero_esphs.to_string());
    col_strings.push(Col::azero_esphs_uncertainty.to_string());
    col_strings.push(Col::ag_esphs.to_string());
    col_strings.push(Col::ag_esphs_uncertainty.to_string());
    col_strings.push(Col::ebpminrp_esphs.to_string());
    col_strings.push(Col::ebpminrp_esphs_uncertainty.to_string());
    col_strings.push(Col::teff_esphs.to_string());
    col_strings.push(Col::teff_esphs_uncertainty.to_string());
    col_strings.push(Col::logg_esphs.to_string());
    col_strings.push(Col::logg_esphs_uncertainty.to_string());
    col_strings.push(Col::vsini_esphs.to_string());
    col_strings.push(Col::vsini_esphs_uncertainty.to_string());
    col_strings.push(Col::flags_esphs.to_string());
    col_strings.push(Col::spectraltype_esphs.to_string());
    col_strings.push(Col::activityindex_espcs.to_string());
    col_strings.push(Col::activityindex_espcs_uncertainty.to_string());
    col_strings.push(Col::activityindex_espcs_input.to_string());
    col_strings.push(Col::teff_espucd.to_string());
    col_strings.push(Col::teff_espucd_uncertainty.to_string());
    col_strings.push(Col::flags_espucd.to_string());
    col_strings.push(Col::radius_flame.to_string());
    col_strings.push(Col::radius_flame_lower.to_string());
    col_strings.push(Col::radius_flame_upper.to_string());
    col_strings.push(Col::lum_flame.to_string());
    col_strings.push(Col::lum_flame_lower.to_string());
    col_strings.push(Col::lum_flame_upper.to_string());
    col_strings.push(Col::mass_flame.to_string());
    col_strings.push(Col::mass_flame_lower.to_string());
    col_strings.push(Col::mass_flame_upper.to_string());
    col_strings.push(Col::age_flame.to_string());
    col_strings.push(Col::age_flame_lower.to_string());
    col_strings.push(Col::age_flame_upper.to_string());
    col_strings.push(Col::flags_flame.to_string());
    col_strings.push(Col::evolstage_flame.to_string());
    col_strings.push(Col::gravredshift_flame.to_string());
    col_strings.push(Col::gravredshift_flame_lower.to_string());
    col_strings.push(Col::gravredshift_flame_upper.to_string());
    col_strings.push(Col::bc_flame.to_string());
    col_strings.push(Col::mh_msc.to_string());
    col_strings.push(Col::mh_msc_upper.to_string());
    col_strings.push(Col::mh_msc_lower.to_string());
    col_strings.push(Col::azero_msc.to_string());
    col_strings.push(Col::azero_msc_upper.to_string());
    col_strings.push(Col::azero_msc_lower.to_string());
    col_strings.push(Col::distance_msc.to_string());
    col_strings.push(Col::distance_msc_upper.to_string());
    col_strings.push(Col::distance_msc_lower.to_string());
    col_strings.push(Col::teff_msc1.to_string());
    col_strings.push(Col::teff_msc1_upper.to_string());
    col_strings.push(Col::teff_msc1_lower.to_string());
    col_strings.push(Col::teff_msc2.to_string());
    col_strings.push(Col::teff_msc2_upper.to_string());
    col_strings.push(Col::teff_msc2_lower.to_string());
    col_strings.push(Col::logg_msc1.to_string());
    col_strings.push(Col::logg_msc1_upper.to_string());
    col_strings.push(Col::logg_msc1_lower.to_string());
    col_strings.push(Col::logg_msc2.to_string());
    col_strings.push(Col::logg_msc2_upper.to_string());
    col_strings.push(Col::logg_msc2_lower.to_string());
    col_strings.push(Col::ag_msc.to_string());
    col_strings.push(Col::ag_msc_upper.to_string());
    col_strings.push(Col::ag_msc_lower.to_string());
    col_strings.push(Col::logposterior_msc.to_string());
    col_strings.push(Col::mcmcaccept_msc.to_string());
    col_strings.push(Col::mcmcdrift_msc.to_string());
    col_strings.push(Col::flags_msc.to_string());
    col_strings.push(Col::neuron_oa_id.to_string());
    col_strings.push(Col::neuron_oa_dist.to_string());
    col_strings.push(Col::neuron_oa_dist_percentile_rank.to_string());
    col_strings.push(Col::flags_oa.to_string());
    map.insert(astrophysical_parameters.string(), col_strings);
}
