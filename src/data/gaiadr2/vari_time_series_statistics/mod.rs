// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the vari_time_series_statistics table.

use crate::traits::{Column, Table};

/// Statistical parameters of time series, using only transits not rejected,
/// see rejectedByVariability column in the VO Table epochPhotometryUrl in
/// gaiaSource.
///
/// Note that NaN will be reported when the parameter value is missing or
/// cannot be calculated.
#[allow(non_camel_case_types)]
pub struct vari_time_series_statistics;

impl Table for vari_time_series_statistics {
    fn string(&self) -> String {
        "vari_time_series_statistics".to_string()
    }
}

/// The columns in the vari_time_series_statistics table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// Solution Identifier
    solution_id,
    /// Unique source identifier
    source_id,
    /// Total number of G FOV transits selected for variability analysis
    num_selected_g_fov,
    /// Mean observation time for G FoV transits
    mean_obs_time_g_fov,
    /// Time duration of the time series for G FoV transits
    time_duration_g_fov,
    /// Minimum G FoV magnitude
    min_mag_g_fov,
    /// Maximum G FoV magnitude
    max_mag_g_fov,
    /// Mean G FoV magnitude
    mean_mag_g_fov,
    /// Median G FoV magnitude
    median_mag_g_fov,
    /// Difference between the highest and lowest G FoV magnitudes
    range_mag_g_fov,
    /// Square root of the unweighted G FoV magnitude variance
    std_dev_mag_g_fov,
    /// Standardized unweighted G FoV magnitude skewness
    skewness_mag_g_fov,
    /// Standardized unweighted G FoV magnitude kurtosis
    kurtosis_mag_g_fov,
    /// Median Absolute Deviation (MAD) for G FoV transits
    mad_mag_g_fov,
    /// Abbe value for G FoV transits
    abbe_mag_g_fov,
    /// Interquartile range for G FoV transits
    iqr_mag_g_fov,
    /// Total number of BP observations selected for variability analysis
    num_selected_bp,
    /// Mean observation time for BP observations
    mean_obs_time_bp,
    /// Time duration of the BP time series
    time_duration_bp,
    /// Minimum BP magnitude
    min_mag_bp,
    /// Maximum BP magnitude
    max_mag_bp,
    /// Mean BP magnitude
    mean_mag_bp,
    /// Median BP magnitude
    median_mag_bp,
    /// Difference between the highest and lowest BP magnitudes
    range_mag_bp,
    /// Square root of the unweighted BP magnitude variance
    std_dev_mag_bp,
    /// Standardized unweighted BP magnitude skewness
    skewness_mag_bp,
    /// Standardized unweighted BP magnitude kurtosis
    kurtosis_mag_bp,
    /// Median Absolute Deviation (MAD) for BP observations
    mad_mag_bp,
    /// Abbe value for BP observations
    abbe_mag_bp,
    /// Interquartile BP magnitude range
    iqr_mag_bp,
    /// Total number of RP observations selected for variability analysis
    num_selected_rp,
    /// Mean observation time for RP observations
    mean_obs_time_rp,
    /// Time duration of the RP time series
    time_duration_rp,
    /// Minimum RP magnitude
    min_mag_rp,
    /// Maximum RP magnitude
    max_mag_rp,
    /// Mean RP magnitude
    mean_mag_rp,
    /// Median RP magnitude
    median_mag_rp,
    /// Difference between the highest and lowest RP magnitudes
    range_mag_rp,
    /// Square root of the unweighted RP magnitude variance
    std_dev_mag_rp,
    /// Standardized unweighted RP magnitude skewness
    skewness_mag_rp,
    /// Standardized unweighted RP magnitude kurtosis
    kurtosis_mag_rp,
    /// Median Absolute Deviation (MAD) for RP observations
    mad_mag_rp,
    /// Abbe value for RP observations
    abbe_mag_rp,
    /// Interquartile RP magnitude range
    iqr_mag_rp,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the vari_time_series_statistics table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::solution_id.to_string());
    col_strings.push(Col::source_id.to_string());
    col_strings.push(Col::num_selected_g_fov.to_string());
    col_strings.push(Col::mean_obs_time_g_fov.to_string());
    col_strings.push(Col::time_duration_g_fov.to_string());
    col_strings.push(Col::min_mag_g_fov.to_string());
    col_strings.push(Col::max_mag_g_fov.to_string());
    col_strings.push(Col::mean_mag_g_fov.to_string());
    col_strings.push(Col::median_mag_g_fov.to_string());
    col_strings.push(Col::range_mag_g_fov.to_string());
    col_strings.push(Col::std_dev_mag_g_fov.to_string());
    col_strings.push(Col::skewness_mag_g_fov.to_string());
    col_strings.push(Col::kurtosis_mag_g_fov.to_string());
    col_strings.push(Col::mad_mag_g_fov.to_string());
    col_strings.push(Col::abbe_mag_g_fov.to_string());
    col_strings.push(Col::iqr_mag_g_fov.to_string());
    col_strings.push(Col::num_selected_bp.to_string());
    col_strings.push(Col::mean_obs_time_bp.to_string());
    col_strings.push(Col::time_duration_bp.to_string());
    col_strings.push(Col::min_mag_bp.to_string());
    col_strings.push(Col::max_mag_bp.to_string());
    col_strings.push(Col::mean_mag_bp.to_string());
    col_strings.push(Col::median_mag_bp.to_string());
    col_strings.push(Col::range_mag_bp.to_string());
    col_strings.push(Col::std_dev_mag_bp.to_string());
    col_strings.push(Col::skewness_mag_bp.to_string());
    col_strings.push(Col::kurtosis_mag_bp.to_string());
    col_strings.push(Col::mad_mag_bp.to_string());
    col_strings.push(Col::abbe_mag_bp.to_string());
    col_strings.push(Col::iqr_mag_bp.to_string());
    col_strings.push(Col::num_selected_rp.to_string());
    col_strings.push(Col::mean_obs_time_rp.to_string());
    col_strings.push(Col::time_duration_rp.to_string());
    col_strings.push(Col::min_mag_rp.to_string());
    col_strings.push(Col::max_mag_rp.to_string());
    col_strings.push(Col::mean_mag_rp.to_string());
    col_strings.push(Col::median_mag_rp.to_string());
    col_strings.push(Col::range_mag_rp.to_string());
    col_strings.push(Col::std_dev_mag_rp.to_string());
    col_strings.push(Col::skewness_mag_rp.to_string());
    col_strings.push(Col::kurtosis_mag_rp.to_string());
    col_strings.push(Col::mad_mag_rp.to_string());
    col_strings.push(Col::abbe_mag_rp.to_string());
    col_strings.push(Col::iqr_mag_rp.to_string());
    map.insert(vari_time_series_statistics.string(), col_strings);
}
