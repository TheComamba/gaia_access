// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the sso_source table.

use crate::traits::{Column, Table};

/// This table contains data related to Solar System objects observed by
/// Gaia. The quantities in the table are derived from data reduction and
/// are associated to single objects.
#[allow(non_camel_case_types)]
pub struct sso_source;

impl Table for sso_source {
    fn string(&self) -> String {
        "sso_source".to_string()
    }
}

/// The columns in the sso_source table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// Solution Identifier
    solution_id,
    /// Source identifier
    source_id,
    /// number of observations
    num_of_obs,
    /// Minor Planet number
    number_mp,
    /// standard MPC denomination of the asteroid
    denomination,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the sso_source table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::solution_id.to_string());
    col_strings.push(Col::source_id.to_string());
    col_strings.push(Col::num_of_obs.to_string());
    col_strings.push(Col::number_mp.to_string());
    col_strings.push(Col::denomination.to_string());
    map.insert(sso_source.string(), col_strings);
}
