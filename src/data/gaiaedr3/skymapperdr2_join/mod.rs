// This code is generated by generate_code.py, do not modify it manually.

//! This module contains all the known columns in the skymapperdr2_join table.

use crate::traits::{Column, Table};

/// Convenience table to be used to join SkyMapper DR2 catalogue with the
/// cross-match results. It lists all the SkyMapper DR2 sources which were
/// used in the cross-match. See Documentation, [chap:crossmatch], for more
/// details on the catalogue.
#[allow(non_camel_case_types)]
pub struct skymapperdr2_join;

impl Table for skymapperdr2_join {
    fn string(&self) -> String {
        "skymapperdr2_join".to_string()
    }
}

/// The columns in the skymapperdr2_join table.
#[allow(non_camel_case_types)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, strum::Display)]
pub enum Col {
    /// Original External Catalogue source identifier
    original_ext_source_id,
}

impl Column for Col {}

#[cfg(test)]
/// Collects all the known columns in the skymapperdr2_join table.
pub fn collect_known(map: &mut std::collections::HashMap<String, Vec<String>>) {
    let mut col_strings = Vec::new();
    col_strings.push(Col::original_ext_source_id.to_string());
    map.insert(skymapperdr2_join.string(), col_strings);
}
